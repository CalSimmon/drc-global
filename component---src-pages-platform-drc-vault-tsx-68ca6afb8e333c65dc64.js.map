{"version":3,"sources":["webpack:///./src/utils/web3/drc-vault/user-drc-vault-holding.ts","webpack:///./src/utils/web3/drc-vault/user-drc-vault-transactions.ts","webpack:///./src/site-context/dr-context/drc-vault-context.tsx","webpack:///./src/site-context/dr-context/drc-vault-provider.tsx","webpack:///./src/utils/web3/nft-balance.ts","webpack:///./src/utils/web3/drc-vault/drc-vault-holders.ts","webpack:///./src/utils/web3/drc-vault/drc-vault-info.ts","webpack:///./src/components/pages/drc-vault/vault-info/vault-holders/vault-holders.styles.ts","webpack:///./src/components/pages/drc-vault/vault-info/vault-holders/vault-holders.tsx","webpack:///./src/components/pages/drc-vault/vault-info/vault-info.tsx","webpack:///./src/components/ui-library/vault-components/allocation-pie-chart/percentage-pie-chart.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/user-assets-in-vault/user-assets-in-vault.styles.ts","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/user-assets-in-vault/user-assets-in-vault.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/deposit-withdraw-action/deposit-withdraw-action.styles.ts","webpack:///./src/utils/web3/drc-vault/vault-actions/vault-deposit-actions.ts","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/deposit-withdraw-action/deposit-button.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/transaction-history/transaction-history.styles.ts","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/transaction-history/transaction-history-card.styles.ts","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/transaction-history/transaction-history-card.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/transaction-history/transaction-history.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/deposit-withdraw-action/view-transaction-history.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/deposit-withdraw-action/deposit-from-wallet.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/vault-action.styles.ts","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/vault-action-deposit.tsx","webpack:///./src/utils/web3/drc-vault/vault-actions/vault-withdraw-actions.ts","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/deposit-withdraw-action/withdraw-button.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/deposit-withdraw-action/withdraw-to-wallet.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-actions/vault-action-withdraw.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/manage-your-vault/manage-your-vault.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/user-vault-overview/user-vault-overview.styles.ts","webpack:///./src/components/pages/drc-vault/vault-connected/user-vault-overview/user-vault-overview.tsx","webpack:///./src/components/pages/drc-vault/vault-connected/vault-connected.tsx","webpack:///./src/utils/data-mappings/map-coin-market-data.ts","webpack:///./src/utils/web3/drc-vault/drc-vault-historical-holdings.ts","webpack:///./src/utils/web3/drc-vault/drc-vault-performance-timeline.ts","webpack:///./src/constants/coin-id.ts","webpack:///./src/components/pages/drc-vault/drc-vault-performance-graph/performance-line-chart.tsx","webpack:///./src/components/pages/drc-vault/drc-vault-performance-graph/drc-vault-performance-graph.styles.ts","webpack:///./src/components/pages/drc-vault/drc-vault-performance-graph/drc-vault-performance-graph.tsx","webpack:///./src/components/pages/drc-vault/vault-landing/access-dr/access-drc-vault.styles.ts","webpack:///./src/components/pages/drc-vault/vault-landing/access-dr/access-drc-vault-container.tsx","webpack:///./src/components/pages/drc-vault/vault-landing/access-dr/access-drc-vault.tsx","webpack:///./src/components/pages/drc-vault/vault-landing/access-dr/connect-wallets-modal/connect-wallets-modal.styles.ts","webpack:///./src/components/pages/drc-vault/vault-landing/access-dr/connect-wallets-modal/connect-wallets-modal.tsx","webpack:///./src/components/pages/drc-vault/vault-landing/access-dr/connect-wallet.tsx","webpack:///./src/components/pages/drc-vault/vault-landing/vault-landing.tsx","webpack:///./src/components/pages/drc-vault/drc-vault.tsx","webpack:///./src/components/pages/drc-vault/drc-vault-app.tsx","webpack:///./src/pages/platform/drc-vault.tsx"],"names":["cache","LRU","max","maxAge","getUserDrcVaultHolding","a","web3","userAccount","contractAddress","force","cacheKey","cachedData","get","contract","eth","Contract","IDRCVault","abi","methods","balanceOf","call","set","Number","console","error","getUserDrcVaultTransactions","getPastEvents","filter","user","fromBlock","depositEvents","withdrawEvents","allTransactions","sort","b","blockNumber","allTxFormated","tx","getBlockTimestamp","timestamp","drcAmount","returnValues","amount","undefined","push","id","transactionHash","logIndex","eventName","event","timeFormated","formatTimestamp","defaultContextValue","chainId","drcVaultAddress","mainnet","Web3","appState","activeAction","setActiveDrAction","disconnectWallet","drcBalance","loading","drcPrice","userVaultHolding","totalVaultHolding","userTransactions","updateVaultData","DrcVaultContext","React","DrcVaultProvider","children","walletInfo","setDrcBalance","setUserVaultHolding","setTotalVaultHolding","setUserTransactions","networkKey","drcPriceData","useCoinPrice","data","usd","updateDrcVaultData","getDrcBalance","then","balance","holding","getDrcVaultTotal","subscribeToBlockUpdate","document","addEventListener","hidden","clearSubscriptions","store","Provider","value","NFTIds","gen00","gen01","getNFTBalance","nftGen","web3ToUse","dataWeb3","IERC1155ABI","nftBalance","getDrcVaultHolders","holders","getDrcVaultInfo","total","holdingPromises","holder","getHolding","address","percentage","Boolean","Promise","all","holderHoldings","styles","tableContainer","Device","Mobile","overflow","marginLeft","grid","marginRight","paddingLeft","table","theme","width","minWidth","thead","th","fontSize","fontWeight","Fonts","Weight","Bold","textAlign","paddingRight","paddingBottom","borderBottom","border","tbody","tr","td","paddingTop","padding","indexCell","display","alignItems","height","text","position","top","content","left","borderTop","backgroundColor","borderRadius","yourDrc","progressBar","secondaryBackground","marginTop","foreground","toggleButton","justifyContent","button","DesktopTablet","maxWidth","legendContainer","VaultHolders","isShowAll","setShowAll","context","WalletContext","price","isConnected","length","displayingHolders","slice","css","map","index","key","isSameAddress","margin","href","getAddressUrl","target","rel","formatAddressForDisplay","formatNumber","round","style","formatCurrency","currency","CurrencySymbol","USD","type","onClick","textSize","right","VaultInfo","isMobile","SiteContext","vaultInfo","setVaultInfo","fetchVaultInfo","info","refetchTimer","setInterval","clearInterval","bottom","desktop","mobile","spanLg","spanMd","spanSm","isNoMarginBottom","isNarrowMargin","label","colorArrayLightMode","Colors","Black","BorderGrey","colorArrayDarkMode","White","DarkModeBorderGrey","PercentagePieChart","name","colors","isDarkMode","percentageChartContainer","outerRadius","innerRadius","startAngle","endAngle","dataKey","nameKey","labelLine","strokeWidth","_","fill","legendItem","largeLegendItem","indicator","headingContainer","marginBottom","imageContainer","img","UserAssetsInVault","logo","LogoWhite","LogoBlack","usdValue","Math","src","alt","component","weight","heading","lineHeight","headingContent","center","inlineContainer","txHistoryButton","cursor","estimateDepositGas","getGasPrice","gasPrice","deposit","estimateGas","from","gasLimit","ethAmount","utils","fromWei","getEthPrice","ethPrice","drcVaultDeposit","onTxHash","log","send","gas","on","success","DepositButton","approveAmount","onSuccess","approvalStatus","setApprovalStatus","approvalTxHash","setApprovalTxHash","depositStatus","setDepositStatus","depositTxHash","setDepositTxHash","allowance","setAllowance","gasEstimation","setGasEstimation","estimateDrcApproveSpendingGas","queryAllowance","getDrcAllowance","contractAllowance","handleApproval","approveDrcSpending","handleDeposit","formattedAmount","approvalMessageMapping","none","pending","failed","depositMessageMapping","isDisabled","isLoading","status","message","url","getTransactionUrl","root","cardHeader","arrow","flexShrink","arrowDown","transform","flex","chevron","alignSelf","transition","TransactionHistoryCard","isDefaultOpen","isOpen","setOpen","chevronIcon","ChevronWhiteIcon","ChevronBlackIcon","arrowIcon","ArrowIconWhite","ArrowIconBlack","isArrowDown","isNoPadding","duration","underline","SlideOutTransactionHistories","onClose","transactions","onHide","isFullWidthOnMobile","enableBodyLock","ViewTransactionHistory","isTxHistoryOpen","setTxHistoryOpen","ListIcon","DepositFromWallet","setValue","onValueSet","deaktopHeadings","desktopContainer","flexGrow","borderRight","mobileContainer","VaultActionDeposit","depositInfo","estimateWithdrawGas","withdraw","drcVaultWithdraw","WithdrawButton","withdrawalStatus","setWithdrawalStatus","withdrawalTxHash","setWithdrawalTxHash","handleWithdraw","setTimeout","anchorToElement","DR_OVERVIEW","withdrawMessageMapping","WithdrawToWallet","VaultActionWithdraw","withdrawalInfo","actionItems","ManageYourDr","MANAGE_DRC_VAULT","itemPickerName","activeItemValue","items","isUniWidth","onItemClick","item","fullWidthOnMobile","back","zIndex","disconnect","topContainer","badge","buyDrcButton","walletHeading","userAccountLink","color","bottomContainer","userVaultWorth","UserVaultOverview","isNoBorderBottom","getContractAddress","ChainNames","isCenter","VaultConnected","hashData","input","reduce","acc","cur","mapCoinMarketData","prices","market_caps","total_volumes","hashedPrices","hashedMarketCap","hashedVolume","Object","keys","date","parseInt","marketCap","totalVolume","getVaultHistoricalHoldings","lastHolding","getDrcVaultPerformanceTimeline","historicalHoldings","startTime","days","Date","now","axiosFetch","getCoinMarketDataQueryUrl","priceTimeLineData","mappedTimeline","reversedHoldings","reverse","timelineData","step","find","h","tvl","PerformanceLineChart","useTheme","endTime","priceDistance","d","min","priceFormatter","keyName","scale","domain","tickFormatter","formatDate","timeFormat","tickLine","tickMargin","tick","axisLine","stroke","minTickGap","yAxisId","orientation","dataMin","dataMax","hide","contentStyle","TooltipContainerStyles","labelFormatter","formatter","itemStyle","dot","activeDot","headerContainer","itemPickerContainer","infoIcon","DrcVaultPerformanceGraph","activeTab","setActiveTab","setData","setLoading","res","size","extraInfo","AccessDrcVaultContainer","AccessDrcVault","setViewingVault","isAllowedUser","container","flexWrap","flexDirection","MobilePortXs","WalletInfoModal","isCopied","setCopied","timer","clearTimeout","MetaMaskLogo","connectWalletConnect","WalletConnectLogo","CoinbaseWalletLogo","TrustWalletLogo","copyToClipboard","CopyIcon","isIOS","titleOverwrite","timeOut","buttonTextMapping","noInjectedProvider","multipleWallet","noAccount","chainNotSupported","ConnectWallet","isModalOpen","setModalOpen","connectionErrorType","connectWallet","VaultLanding","DrcVault","isViewingVault","showVaultLanding","subHeading","DrcVaultApp","DrcVaultPage","NavTab","Platform","hideSocial","title","description"],"mappings":"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","file":"component---src-pages-platform-drc-vault-tsx-68ca6afb8e333c65dc64.js","sourcesContent":["import LRU from \"lru-cache\";\nimport Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport IDRCVault from \"../../../contracts/IDRCVault.json\";\n\nconst cache = new LRU<string, number>({\n  max: 50000,\n  maxAge: 1000 * 60 * 5, // 5 mins\n});\n\ninterface UserHoldingInput {\n  web3: Web3;\n  userAccount: string;\n  contractAddress: string;\n  force?: boolean;\n}\n\nexport const getUserDrcVaultHolding = async ({\n  web3,\n  userAccount,\n  contractAddress,\n  force,\n}: UserHoldingInput) => {\n  const cacheKey = `drcVaultHolding_${userAccount}`;\n  const cachedData: number | undefined = cache.get(cacheKey);\n\n  if (cachedData && !force) {\n    return cachedData;\n  }\n\n  try {\n    const contract = new web3.eth.Contract(\n      IDRCVault.abi as AbiItem[],\n      contractAddress\n    );\n\n    const balanceOf = await contract.methods.balanceOf(userAccount).call();\n\n    if (balanceOf) {\n      cache.set(cacheKey, balanceOf);\n    }\n\n    return Number(balanceOf);\n  } catch (err) {\n    console.error(\"Failed to get user DRC vault holding\", userAccount, err);\n    return null;\n  }\n};\n","import Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport { DrcVaultTransactionInfo } from \"../../../../types/dr-vault\";\nimport IDRCVault from \"../../../contracts/IDRCVault.json\";\nimport { formatTimestamp } from \"../../timestamp\";\nimport { getBlockTimestamp } from \"../get-block-timestamp\";\n\ninterface UserTransactionsInput {\n  web3: Web3;\n  userAccount: string;\n  contractAddress: string;\n}\n\nexport const getUserDrcVaultTransactions = async ({\n  web3,\n  userAccount,\n  contractAddress,\n}: UserTransactionsInput) => {\n  try {\n    const contract = new web3.eth.Contract(\n      IDRCVault.abi as AbiItem[],\n      contractAddress\n    );\n\n    const depositEvents = await contract.getPastEvents(\"Deposit\", {\n      filter: { user: userAccount },\n      fromBlock: 1,\n    });\n\n    const withdrawEvents = await contract.getPastEvents(\"Withdraw\", {\n      filter: { user: userAccount },\n      fromBlock: 1,\n    });\n\n    const allTransactions = [...depositEvents, ...withdrawEvents].sort(\n      (a, b) => {\n        return b.blockNumber - a.blockNumber;\n      }\n    );\n\n    const allTxFormated: DrcVaultTransactionInfo[] = [];\n\n    for (const tx of allTransactions) {\n      const blockNumber = tx.blockNumber;\n      const timestamp = await getBlockTimestamp(web3, blockNumber);\n\n      const drcAmount = tx.returnValues.amount\n        ? Number(tx.returnValues.amount)\n        : undefined;\n\n      allTxFormated.push({\n        id: `${tx.transactionHash}${tx.logIndex}`,\n        eventName: tx.event,\n        transactionHash: tx.transactionHash,\n        timestamp,\n        timeFormated: formatTimestamp(timestamp),\n        drcAmount,\n      });\n    }\n\n    return allTxFormated;\n  } catch (err) {\n    console.error(\n      \"Failed to get past DRC vault transactions\",\n      userAccount,\n      err\n    );\n    return null;\n  }\n};\n","import * as React from \"react\";\nimport Web3 from \"web3\";\nimport {\n  DrcVaultTransactionInfo,\n  DrVaultUserAction,\n} from \"../../../types/dr-vault\";\nimport { drcVaultAddress } from \"../../data/dr/dr-contract-addresses\";\n\nexport interface VaultState<T> {\n  loading: boolean;\n  data?: T;\n}\n\nexport interface DrcVaultContextState {\n  chainId: number;\n  contractAddress: string;\n  userAccount: string;\n  web3: Web3;\n  appState: {\n    activeAction: DrVaultUserAction;\n    setActiveDrAction: (actionType: DrVaultUserAction) => void;\n  };\n  disconnectWallet: () => void;\n  drcBalance: VaultState<number>;\n  drcPrice: VaultState<number>;\n  userVaultHolding: VaultState<number>;\n  totalVaultHolding: VaultState<number>;\n  userTransactions: VaultState<DrcVaultTransactionInfo[]>;\n  updateVaultData: () => Promise<void>;\n}\n\nexport const defaultContextValue: DrcVaultContextState = {\n  chainId: 1,\n  contractAddress: drcVaultAddress.mainnet,\n  userAccount: \"0x0\",\n  web3: new Web3(),\n  appState: {\n    activeAction: \"deposit\",\n    setActiveDrAction: () => undefined,\n  },\n  disconnectWallet: () => undefined,\n  drcBalance: {\n    loading: true,\n  },\n  drcPrice: {\n    loading: true,\n  },\n  userVaultHolding: {\n    loading: true,\n  },\n  totalVaultHolding: {\n    loading: true,\n  },\n  userTransactions: {\n    loading: true,\n  },\n  updateVaultData: async () => undefined,\n};\n\nexport const DrcVaultContext =\n  React.createContext<DrcVaultContextState>(defaultContextValue);\n","import * as React from \"react\";\nimport {\n  DrcVaultTransactionInfo,\n  DrVaultUserAction,\n} from \"../../../types/dr-vault\";\nimport { drcVaultAddress } from \"../../data/dr/dr-contract-addresses\";\nimport { useCoinPrice } from \"../../hooks/query-hooks/use-coin-price\";\nimport { subscribeToBlockUpdate } from \"../../utils/web3/block-subscription\";\nimport { getDrcBalance } from \"../../utils/web3/drc-balance\";\nimport { getDrcVaultTotal } from \"../../utils/web3/drc-vault/drc-vault-total\";\nimport { getUserDrcVaultHolding } from \"../../utils/web3/drc-vault/user-drc-vault-holding\";\nimport { getUserDrcVaultTransactions } from \"../../utils/web3/drc-vault/user-drc-vault-transactions\";\nimport {\n  defaultContextValue,\n  DrcVaultContext,\n  DrcVaultContextState,\n  VaultState,\n} from \"./drc-vault-context\";\nimport { WalletConnected } from \"./wallet-context\";\n\nconst DrcVaultProvider: React.FC<WalletConnected> = ({\n  children,\n  ...walletInfo\n}) => {\n  const [activeAction, setActiveDrAction] =\n    React.useState<DrVaultUserAction>(\"deposit\");\n\n  const [drcBalance, setDrcBalance] = React.useState<VaultState<number>>(\n    defaultContextValue.drcBalance\n  );\n  const [userVaultHolding, setUserVaultHolding] = React.useState<\n    VaultState<number>\n  >(defaultContextValue.userVaultHolding);\n  const [totalVaultHolding, setTotalVaultHolding] = React.useState<\n    VaultState<number>\n  >(defaultContextValue.totalVaultHolding);\n  const [userTransactions, setUserTransactions] = React.useState<\n    VaultState<DrcVaultTransactionInfo[]>\n  >(defaultContextValue.userTransactions);\n\n  const { web3, userAccount, chainId } = walletInfo;\n  const networkKey = chainId === 3 ? \"ropsten\" : \"mainnet\";\n  const contractAddress = drcVaultAddress[networkKey];\n\n  const drcPriceData = useCoinPrice({\n    id: \"digital-reserve-currency\",\n  });\n  const drcPrice: VaultState<number> = {\n    loading: drcPriceData.loading,\n    data: drcPriceData.data?.usd,\n  };\n\n  const updateDrcVaultData = async () => {\n    getDrcBalance({ web3, userAccount, chainId }).then((balance) => {\n      setDrcBalance({\n        loading: false,\n        data: balance !== null ? balance : drcBalance.data || 0,\n      });\n    });\n\n    getUserDrcVaultHolding({\n      web3,\n      userAccount,\n      contractAddress,\n      force: true,\n    }).then((holding) => {\n      setUserVaultHolding({\n        loading: false,\n        data: holding !== null ? holding : userVaultHolding.data,\n      });\n    });\n\n    getDrcVaultTotal({\n      web3,\n      contractAddress,\n      force: true,\n    }).then((holding) => {\n      setTotalVaultHolding({\n        loading: false,\n        data: holding !== null ? holding : totalVaultHolding.data,\n      });\n    });\n\n    getUserDrcVaultTransactions({\n      web3,\n      userAccount,\n      contractAddress,\n    }).then((data) => {\n      setUserTransactions({\n        loading: false,\n        data: data || userTransactions.data,\n      });\n    });\n  };\n\n  React.useEffect(() => {\n    updateDrcVaultData();\n    subscribeToBlockUpdate(web3, updateDrcVaultData);\n\n    document.addEventListener(\"visibilitychange\", function () {\n      if (document.hidden) {\n        web3.eth.clearSubscriptions(() => {});\n      } else {\n        updateDrcVaultData();\n        subscribeToBlockUpdate(web3, updateDrcVaultData);\n      }\n    });\n\n    return () => {\n      web3.eth.clearSubscriptions(() => {});\n    };\n  }, [userAccount, chainId]);\n\n  const store: DrcVaultContextState = {\n    contractAddress,\n    appState: {\n      activeAction,\n      setActiveDrAction,\n    },\n    drcBalance,\n    drcPrice,\n    userVaultHolding,\n    totalVaultHolding,\n    userTransactions,\n    updateVaultData: updateDrcVaultData,\n    ...walletInfo,\n  };\n\n  return (\n    <DrcVaultContext.Provider value={store}>\n      {children}\n    </DrcVaultContext.Provider>\n  );\n};\n\nexport default DrcVaultProvider;\n","import LRU from \"lru-cache\";\nimport Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport IERC1155ABI from \"../../contracts/IERC1155ABI.json\";\nimport { dataWeb3 } from \"./data-web3\";\n\ntype NftGen = \"gen00\" | \"gen01\";\n\nconst NFTContractAddress = \"0xe57b446d45432A1827210240ef18a21059Bfe945\";\n// const ownerAddress = \"0x9295f09591ED988507Af8d17A2219089E8fe6255\";\nconst NFTIds: Record<NftGen, number> = {\n  gen00: 3,\n  gen01: 16,\n};\n\nconst cache = new LRU<string, number>({\n  max: 50000,\n  maxAge: 1000 * 60 * 5, // 5 mins\n});\n\ninterface NftBalanceInput {\n  web3?: Web3;\n  userAccount: string;\n  nftGen: NftGen;\n}\n\nexport const getNFTBalance = async ({\n  web3,\n  userAccount,\n  nftGen,\n}: NftBalanceInput) => {\n  const cacheKey = `userNftBalance_${nftGen}_${userAccount}`;\n  const cachedData: number | undefined = cache.get(cacheKey);\n\n  if (cachedData) {\n    return cachedData;\n  }\n\n  const web3ToUse = web3 || dataWeb3;\n\n  const contract = new web3ToUse.eth.Contract(\n    IERC1155ABI as AbiItem[],\n    NFTContractAddress\n  );\n\n  try {\n    // Call balanceOf function\n    const nftBalance = Number(\n      await contract.methods.balanceOf(userAccount, NFTIds[nftGen]).call()\n    );\n\n    if (nftBalance) {\n      cache.set(cacheKey, nftBalance);\n    }\n\n    return nftBalance;\n  } catch (err) {\n    console.error(\"Failed to get user NFT holding\", nftGen, userAccount, err);\n    return null;\n  }\n};\n","import LRU from \"lru-cache\";\nimport Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport IDRCVault from \"../../../contracts/IDRCVault.json\";\nimport { dataWeb3 } from \"../data-web3\";\n\nconst cache = new LRU<string, string[]>({\n  max: 50000,\n  maxAge: 1000 * 60 * 5, // 5 mins\n});\n\ninterface VaultTotalInput {\n  web3?: Web3;\n  contractAddress: string;\n  force?: boolean;\n}\n\nexport const getDrcVaultHolders = async ({\n  web3,\n  contractAddress,\n  force,\n}: VaultTotalInput) => {\n  const cacheKey = `drcVaultHolders`;\n  const cachedData: string[] | undefined = cache.get(cacheKey);\n\n  if (cachedData && !force) {\n    return cachedData;\n  }\n\n  const web3ToUse = web3 || dataWeb3;\n\n  try {\n    const contract = new web3ToUse.eth.Contract(\n      IDRCVault.abi as AbiItem[],\n      contractAddress\n    );\n\n    const holders: string[] = await contract.methods.holders().call();\n\n    if (holders) {\n      cache.set(cacheKey, holders);\n    }\n\n    return holders;\n  } catch (err) {\n    console.error(\"Failed to get DRC vault holders\", err);\n    return null;\n  }\n};\n","import Web3 from \"web3\";\nimport { DrcVaultHolderInfo, DrcVaultInfo } from \"../../../../types/dr-vault\";\nimport { dataWeb3 } from \"../data-web3\";\nimport { getNFTBalance } from \"../nft-balance\";\nimport { getDrcVaultHolders } from \"./drc-vault-holders\";\nimport { getDrcVaultTotal } from \"./drc-vault-total\";\nimport { getUserDrcVaultHolding } from \"./user-drc-vault-holding\";\n\ninterface VaultInfoInput {\n  web3?: Web3;\n  contractAddress: string;\n}\n\nexport const getDrcVaultInfo = async ({\n  web3,\n  contractAddress,\n}: VaultInfoInput): Promise<DrcVaultInfo | null> => {\n  const web3ToUse = web3 || dataWeb3;\n\n  try {\n    const holders =\n      (await getDrcVaultHolders({\n        web3: web3ToUse,\n        contractAddress,\n      })) || [];\n    const total = await getDrcVaultTotal({ web3: web3ToUse, contractAddress });\n    const holdingPromises = [];\n\n    for (const holder of holders) {\n      const getHolding = async (): Promise<DrcVaultHolderInfo | undefined> => {\n        const holding = await getUserDrcVaultHolding({\n          web3: web3ToUse,\n          contractAddress,\n          userAccount: holder,\n        });\n\n        const gen00 = await getNFTBalance({\n          web3: web3ToUse,\n          userAccount: holder,\n          nftGen: \"gen00\",\n        });\n        const gen01 = await getNFTBalance({\n          web3: web3ToUse,\n          userAccount: holder,\n          nftGen: \"gen01\",\n        });\n\n        if (holding && total) {\n          return {\n            address: holder,\n            holding,\n            percentage: holding / total,\n            gen00: Boolean(gen00),\n            gen01: Boolean(gen01),\n          };\n        }\n      };\n      holdingPromises.push(getHolding());\n    }\n\n    const holderHoldings = await Promise.all(holdingPromises);\n\n    return {\n      total,\n      holders: (holderHoldings.filter(Boolean) as DrcVaultHolderInfo[]).sort(\n        (a, b) => b.holding - a.holding\n      ),\n    };\n  } catch (err) {\n    console.error(\"Failed get DRC vault info\", err);\n    return null;\n  }\n};\n","import { Interpolation } from \"@emotion/core\";\nimport { Theme } from \"../../../../../../types/theme\";\nimport { Fonts } from \"../../../../ui-library/design-tokens/fonts\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport { Device } from \"../../../../ui-library/design-tokens/media-queries\";\n\nconst tableContainer: Interpolation = {\n  [Device.Mobile]: {\n    overflow: \"auto\",\n    marginLeft: grid(-2),\n    marginRight: grid(-2),\n    paddingLeft: grid(2),\n  },\n};\n\nconst table = (theme: Theme): Interpolation => ({\n  width: \"100%\",\n  minWidth: grid(58),\n\n  thead: {\n    th: {\n      fontSize: 18,\n      fontWeight: Fonts.Weight.Bold,\n      textAlign: \"left\",\n      paddingLeft: grid(1.5),\n      paddingRight: grid(1.5),\n      paddingBottom: grid(2),\n      borderBottom: `1px solid ${theme.border}`,\n      \":first-of-type\": {\n        paddingLeft: 0,\n      },\n      \":last-of-type\": {\n        paddingRight: 0,\n      },\n      [Device.Mobile]: {\n        paddingLeft: grid(1),\n        paddingRight: grid(1),\n      },\n    },\n  },\n\n  tbody: {\n    tr: {\n      \":first-of-type\": {\n        td: {\n          paddingTop: grid(3),\n        },\n      },\n    },\n    td: {\n      padding: grid(1.5),\n      paddingBottom: grid(1),\n      \":first-of-type\": {\n        paddingLeft: 0,\n      },\n      \":last-of-type\": {\n        paddingRight: 0,\n      },\n      [Device.Mobile]: {\n        paddingLeft: grid(1),\n        paddingRight: grid(1),\n      },\n    },\n  },\n});\n\nconst indexCell: Interpolation = {\n  display: \"flex\",\n  alignItems: \"center\",\n};\n\nconst gen00 = (theme: Theme): Interpolation => ({\n  display: \"inline-block\",\n  width: 0,\n  height: 0,\n  border: \"4.5px solid transparent\",\n  borderBottom: `6px solid ${theme.text}`,\n  position: \"relative\",\n  top: \"-5px\",\n\n  \"::after\": {\n    content: `''`,\n    position: \"absolute\",\n    left: \"-4.5px\",\n    top: \"6px\",\n    width: 0,\n    height: 0,\n    border: \"4.5px solid transparent\",\n    borderTop: `6px solid ${theme.text}`,\n  },\n});\n\nconst gen01 = (theme: Theme): Interpolation => ({\n  display: \"inline-block\",\n  width: 9,\n  height: 9,\n  backgroundColor: theme.text,\n  borderRadius: \"50%\",\n});\n\nconst yourDrc: Interpolation = {\n  fontWeight: Fonts.Weight.Bold,\n};\n\nconst progressBar = (theme: Theme): Interpolation => ({\n  height: 3,\n  backgroundColor: theme.secondaryBackground,\n  borderRadius: 3,\n  overflow: \"hidden\",\n  marginTop: 3,\n\n  \"> div\": {\n    height: \"100%\",\n    backgroundColor: theme.foreground,\n  },\n});\n\nconst toggleButton: Interpolation = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  marginTop: grid(2.5),\n};\n\nconst button: Interpolation = {\n  width: \"100%\",\n  [Device.DesktopTablet]: {\n    maxWidth: grid(30),\n  },\n};\n\nconst legendContainer: Interpolation = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  marginTop: grid(2.5),\n};\n\nconst styles = {\n  tableContainer,\n  table,\n  indexCell,\n  gen00,\n  gen01,\n  yourDrc,\n  progressBar,\n  toggleButton,\n  button,\n  legendContainer,\n};\n\nexport default styles;\n","import * as React from \"react\";\nimport { CurrencySymbol } from \"../../../../../../types/currency\";\nimport { DrcVaultHolderInfo } from \"../../../../../../types/dr-vault\";\nimport { useCoinPrice } from \"../../../../../hooks/query-hooks/use-coin-price\";\nimport {\n  formatCurrency,\n  formatNumber,\n} from \"../../../../../utils/format-number\";\nimport {\n  formatAddressForDisplay,\n  isSameAddress,\n} from \"../../../../../utils/web3/address-helper\";\nimport { WalletContext } from \"../../../../../site-context/dr-context/wallet-context\";\nimport Button from \"../../../../ui-library/button/button\";\nimport { getAddressUrl } from \"../../../../../utils/etherscan\";\nimport Text from \"../../../../ui-library/text/text\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport styles from \"./vault-holders.styles\";\n\ninterface VaultHoldersProps {\n  holders: DrcVaultHolderInfo[];\n}\n\nconst VaultHolders: React.FC<VaultHoldersProps> = ({ holders }) => {\n  const [isShowAll, setShowAll] = React.useState<boolean>(false);\n\n  const context = React.useContext(WalletContext);\n\n  const { data: drcPrice } = useCoinPrice({\n    id: \"digital-reserve-currency\",\n  });\n\n  const price = drcPrice?.usd;\n  const chainId = context.isConnected ? context.chainId : 1;\n  const userAccount = context.isConnected ? context.userAccount : undefined;\n\n  if (holders.length === 0 || !price) {\n    return null;\n  }\n\n  const showingCount = 20;\n  const displayingHolders = !isShowAll\n    ? holders.slice(0, showingCount)\n    : holders;\n\n  return (\n    <>\n      <div css={styles.tableContainer}>\n        <table css={styles.table}>\n          <thead>\n            <tr>\n              <th>Rank</th>\n              <th>Address</th>\n              <th>Quantity</th>\n              <th>Percentage</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayingHolders.map(\n              ({ holding, address, percentage, gen00, gen01 }, index) => (\n                <tr\n                  key={address}\n                  css={isSameAddress(userAccount, address) && styles.yourDrc}\n                >\n                  <td>\n                    <div css={styles.indexCell}>\n                      {index + 1}\n                      {gen00 && (\n                        <Text css={styles.gen00} margin={{ left: 7 }} />\n                      )}\n                      {gen01 && (\n                        <Text css={styles.gen01} margin={{ left: 6 }} />\n                      )}\n                    </div>\n                  </td>\n                  <td>\n                    <a\n                      href={getAddressUrl(address, chainId)}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      {isSameAddress(userAccount, address)\n                        ? \"Your DRC\"\n                        : formatAddressForDisplay(address)}\n                    </a>\n                  </td>\n                  <td>{formatNumber({ value: holding })}</td>\n                  <td>\n                    <div>\n                      {formatNumber({ value: percentage * 100, round: 2 })}%\n                    </div>\n                    <div css={styles.progressBar}>\n                      <div style={{ width: `${percentage * 100}%` }} />\n                    </div>\n                  </td>\n                  <td>\n                    {formatCurrency({\n                      value: holding * price,\n                      currency: CurrencySymbol.USD,\n                      round: 2,\n                    })}\n                  </td>\n                </tr>\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {holders.length > showingCount && (\n        <div css={styles.toggleButton}>\n          <Button\n            type=\"primary\"\n            css={styles.button}\n            onClick={() => setShowAll(!isShowAll)}\n          >\n            {isShowAll ? \"SHOW LESS\" : \"SHOW ALL\"}\n          </Button>\n        </div>\n      )}\n\n      <div css={styles.legendContainer}>\n        <Text type=\"secondary\" textSize={14} margin={{ right: grid(3) }}>\n          <Text margin={{ right: grid(1) }} css={styles.gen00} />\n          GEN00 NFT\n        </Text>\n        <Text type=\"secondary\" textSize={14}>\n          <Text margin={{ right: grid(1) }} css={styles.gen01} />\n          GEN01 NFT\n        </Text>\n      </div>\n    </>\n  );\n};\n\nexport default VaultHolders;\n","import * as React from \"react\";\nimport { CurrencySymbol } from \"../../../../../types/currency\";\nimport { DrcVaultInfo } from \"../../../../../types/dr-vault\";\nimport { drcVaultAddress } from \"../../../../data/dr/dr-contract-addresses\";\nimport { useCoinPrice } from \"../../../../hooks/query-hooks/use-coin-price\";\nimport { WalletContext } from \"../../../../site-context/dr-context/wallet-context\";\nimport { SiteContext } from \"../../../../site-context/site-context\";\nimport { formatCurrency, formatNumber } from \"../../../../utils/format-number\";\nimport { getDrcVaultInfo } from \"../../../../utils/web3/drc-vault/drc-vault-info\";\nimport Column from \"../../../ui-library/column-system/column\";\nimport Row from \"../../../ui-library/column-system/row\";\nimport { grid } from \"../../../ui-library/design-tokens/grid\";\nimport MarginBox from \"../../../ui-library/margin-box/margin-box\";\nimport Heading from \"../../../ui-library/text/heading\";\nimport InfoCardSmall from \"../../../ui-library/vault-components/info-card/info-card-small\";\nimport VaultHolders from \"./vault-holders/vault-holders\";\n\nconst VaultInfo: React.FC = () => {\n  const context = React.useContext(WalletContext);\n  const { isMobile } = React.useContext(SiteContext);\n\n  const [vaultInfo, setVaultInfo] = React.useState<DrcVaultInfo>();\n\n  const { data } = useCoinPrice({ id: \"digital-reserve-currency\" });\n\n  const web3 = !context.loading ? context.web3 : undefined;\n  const chainId = !context.loading ? context.chainId : 1;\n  const networkKey = chainId === 3 ? \"ropsten\" : \"mainnet\";\n  const contractAddress = drcVaultAddress[networkKey];\n\n  const fetchVaultInfo = async () => {\n    const info = await getDrcVaultInfo({\n      web3,\n      contractAddress,\n    });\n    if (info) {\n      setVaultInfo(info);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchVaultInfo();\n    const refetchTimer = setInterval(() => fetchVaultInfo(), 1000 * 60 * 5);\n\n    return () => {\n      clearInterval(refetchTimer);\n    };\n  }, [chainId]);\n\n  if (!vaultInfo) {\n    return null;\n  }\n\n  return (\n    <>\n      <Heading textAlign=\"center\" margin={{ bottom: grid(3.5) }}>\n        DRC Holders in DRC Vault\n      </Heading>\n\n      <MarginBox\n        margin={{ desktop: { bottom: grid(4) }, mobile: { bottom: grid(3) } }}\n      >\n        <Row>\n          <Column\n            spanLg={4}\n            spanMd={4}\n            spanSm={12}\n            isNoMarginBottom={!isMobile}\n            isNarrowMargin={isMobile}\n          >\n            <InfoCardSmall\n              label=\"Total Holders\"\n              value={`${vaultInfo.holders.length}`}\n            />\n          </Column>\n          <Column\n            spanLg={4}\n            spanMd={4}\n            spanSm={12}\n            isNoMarginBottom={!isMobile}\n            isNarrowMargin={isMobile}\n          >\n            <InfoCardSmall\n              label=\"Total DRC Locked\"\n              value={\n                formatNumber({\n                  value: vaultInfo.total,\n                  round: 0,\n                }) || \"-\"\n              }\n            />\n          </Column>\n          <Column\n            spanLg={4}\n            spanMd={4}\n            spanSm={12}\n            isNoMarginBottom={!isMobile}\n            isNarrowMargin={isMobile}\n          >\n            <InfoCardSmall\n              label=\"Total Value Locked\"\n              value={`${\n                vaultInfo.total && data?.usd\n                  ? formatCurrency({\n                      value: vaultInfo.total * data.usd,\n                      currency: CurrencySymbol.USD,\n                      round: 2,\n                    })\n                  : \"$-\"\n              }`}\n            />\n          </Column>\n        </Row>\n      </MarginBox>\n\n      <MarginBox margin={{ bottom: grid(4) }}>\n        <VaultHolders holders={vaultInfo.holders} />\n      </MarginBox>\n    </>\n  );\n};\n\nexport default VaultInfo;\n","import * as React from \"react\";\nimport { Cell, Pie, PieChart, ResponsiveContainer } from \"recharts\";\nimport { SiteContext } from \"../../../../site-context/site-context\";\nimport { Colors } from \"../../design-tokens/colors\";\nimport styles from \"./allocation-pie-chart.styles\";\n\nconst colorArrayLightMode = [Colors.Black, Colors.BorderGrey];\nconst colorArrayDarkMode = [Colors.White, Colors.DarkModeBorderGrey];\n\ninterface PercentagePieChartProps {\n  percentage: number;\n}\n\nconst PercentagePieChart: React.FC<PercentagePieChartProps> = ({\n  percentage,\n}) => {\n  const data = [\n    { name: \"Your DRC\", percentage: percentage },\n    { name: \"Other holders\", percentage: 100 - percentage },\n  ];\n  const { isDarkMode } = React.useContext(SiteContext);\n  const colors = isDarkMode ? colorArrayDarkMode : colorArrayLightMode;\n\n  return (\n    <div>\n      <div css={styles.percentageChartContainer}>\n        <ResponsiveContainer width=\"100%\" height={150}>\n          <PieChart>\n            <Pie\n              outerRadius={75}\n              innerRadius={45}\n              startAngle={90}\n              endAngle={450}\n              data={data}\n              dataKey=\"percentage\"\n              nameKey=\"name\"\n              labelLine={false}\n              strokeWidth={0}\n            >\n              {data.map((_, index) => (\n                <Cell\n                  key={`cell-${index}`}\n                  fill={colors[index % colors.length]}\n                />\n              ))}\n            </Pie>\n          </PieChart>\n        </ResponsiveContainer>\n        <div css={styles.percentage}>{percentage}%</div>\n      </div>\n\n      <div css={styles.legendContainer}>\n        <div css={[styles.legendItem, styles.largeLegendItem]}>\n          <div css={[styles.indicator, { backgroundColor: colors[0] }]} />\n          <div>Your DRC</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PercentagePieChart;\n","import { Interpolation } from \"@emotion/core\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\n\nconst content: Interpolation = {\n  padding: `${grid(3)} ${grid(2.5)} ${grid(4)}`,\n};\n\nconst headingContainer: Interpolation = {\n  textAlign: \"center\",\n  marginBottom: grid(2.5),\n};\n\nconst imageContainer: Interpolation = {\n  width: grid(6),\n  height: grid(6),\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  marginBottom: grid(2.5),\n\n  img: {\n    width: \"100%\",\n  },\n};\n\nconst styles = {\n  content,\n  headingContainer,\n  imageContainer,\n};\n\nexport default styles;\n","import * as React from \"react\";\nimport { CurrencySymbol } from \"../../../../../../../types/currency\";\nimport LogoBlack from \"../../../../../../images/logo-round-black.svg\";\nimport LogoWhite from \"../../../../../../images/logo-round-white.svg\";\nimport {\n  formatCurrency,\n  formatNumber,\n} from \"../../../../../../utils/format-number\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport Text from \"../../../../../ui-library/text/text\";\nimport { Fonts } from \"../../../../../ui-library/design-tokens/fonts\";\nimport { DrcVaultContext } from \"../../../../../../site-context/dr-context/drc-vault-context\";\nimport { SiteContext } from \"../../../../../../site-context/site-context\";\nimport Image from \"../../../../../ui-library/image/image\";\nimport PercentagePieChart from \"../../../../../ui-library/vault-components/allocation-pie-chart/percentage-pie-chart\";\nimport styles from \"./user-assets-in-vault.styles\";\n\nconst UserAssetsInVault: React.FC = () => {\n  const {\n    drcPrice: { data: drcPrice },\n    userVaultHolding: { data: holding },\n    totalVaultHolding: { data: total },\n  } = React.useContext(DrcVaultContext);\n\n  const { isDarkMode } = React.useContext(SiteContext);\n\n  const logo = isDarkMode ? LogoWhite : LogoBlack;\n\n  const usdValue =\n    holding !== undefined && drcPrice ? holding * drcPrice : undefined;\n\n  const percentage =\n    holding && total ? Math.round((holding / total) * 1000) / 10 : 0;\n\n  return (\n    <div>\n      <div css={styles.content}>\n        <div css={styles.headingContainer}>\n          <div css={styles.imageContainer}>\n            <Image src={logo} alt=\"Logo\" />\n          </div>\n\n          <Text\n            component=\"div\"\n            weight={Fonts.Weight.Bold}\n            margin={{ bottom: grid(0.5) }}\n          >\n            Your DRC share in DRC Vault\n          </Text>\n          <Text\n            component=\"div\"\n            textSize={24}\n            weight={Fonts.Weight.Bold}\n            margin={{ bottom: grid(0.5) }}\n          >\n            {formatNumber({\n              value: holding,\n            }) || \"-\"}{\" \"}\n            DRC\n          </Text>\n          <Text component=\"div\" type=\"secondary\" textSize={14}>\n            {formatCurrency({\n              value: usdValue,\n              round: 2,\n              currency: CurrencySymbol.USD,\n            }) || \"$-\"}{\" \"}\n            USD\n          </Text>\n        </div>\n\n        <PercentagePieChart percentage={percentage} />\n      </div>\n    </div>\n  );\n};\n\nexport default UserAssetsInVault;\n","import { Interpolation } from \"@emotion/core\";\nimport { Fonts } from \"../../../../../ui-library/design-tokens/fonts\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\n\nconst content: Interpolation = {\n  padding: `${grid(3)} ${grid(2.5)} ${grid(3.5)}`,\n};\n\nconst headingContainer: Interpolation = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginBottom: grid(3),\n};\n\nconst heading: Interpolation = {\n  maxWidth: grid(13),\n  fontWeight: Fonts.Weight.Bold,\n  lineHeight: \"20px\",\n};\n\nconst headingContent: Interpolation = {\n  textAlign: \"right\",\n};\n\nconst percentage: Interpolation = {\n  fontSize: 50,\n  fontWeight: Fonts.Weight.Bold,\n  textAlign: \"center\",\n  marginBottom: grid(2),\n};\n\nconst center: Interpolation = {\n  textAlign: \"center\",\n};\n\nconst button: Interpolation = {\n  width: \"100%\",\n};\n\nconst inlineContainer: Interpolation = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  lineHeight: \"16px\",\n};\n\nconst txHistoryButton: Interpolation = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: grid(4),\n  cursor: \"pointer\",\n\n  \"> img\": {\n    marginRight: grid(1),\n  },\n};\n\nconst styles = {\n  content,\n  headingContainer,\n  heading,\n  headingContent,\n  percentage,\n  center,\n  button,\n  inlineContainer,\n  txHistoryButton,\n};\n\nexport default styles;\n","import Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport IDRCVault from \"../../../../contracts/IDRCVault.json\";\nimport { getEthPrice } from \"../../../uniswap-graph/eth-price\";\nimport { getGasPrice } from \"../../gas-price\";\n\ninterface DepositGasInput {\n  web3: Web3;\n  userAccount: string;\n  contractAddress: string;\n  amount: number;\n}\n\nexport const estimateDepositGas = async ({\n  web3,\n  userAccount,\n  contractAddress,\n  amount,\n}: DepositGasInput) => {\n  if (amount === 0) {\n    return 0;\n  }\n\n  const contract = new web3.eth.Contract(\n    IDRCVault.abi as AbiItem[],\n    contractAddress\n  );\n\n  try {\n    const gasPrice = await getGasPrice(web3);\n    const gasLimit = await contract.methods\n      .deposit(userAccount, amount)\n      .estimateGas({ from: userAccount, gasPrice });\n\n    if (gasPrice) {\n      const ethAmount =\n        (Number(web3.utils.fromWei(gasPrice, \"gwei\")) *\n          Math.round(gasLimit * 1.1)) /\n        10 ** 9;\n      const ethPrice = (await getEthPrice()) || 0;\n\n      return ethAmount * ethPrice;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    return null;\n  }\n};\n\ninterface VaultDepositInput {\n  web3: Web3;\n  userAccount: string;\n  contractAddress: string;\n  amount: number;\n  onTxHash?: (transactionHash: string) => void;\n}\n\nexport const drcVaultDeposit = async ({\n  web3,\n  userAccount,\n  contractAddress,\n  amount,\n  onTxHash,\n}: VaultDepositInput) => {\n  try {\n    const contract = new web3.eth.Contract(\n      IDRCVault.abi as AbiItem[],\n      contractAddress\n    );\n\n    const gasPrice = await getGasPrice(web3);\n    let gasLimit: number | undefined = undefined;\n    try {\n      gasLimit = await contract.methods\n        .deposit(userAccount, amount)\n        .estimateGas({ from: userAccount, gasPrice });\n    } catch (err) {\n      console.log(\"Can't estimate gas\", err);\n    }\n\n    await contract.methods\n      .deposit(userAccount, amount)\n      .send({\n        from: userAccount,\n        gasPrice,\n        gas: gasLimit ? Math.round(gasLimit * 1.1) : undefined,\n      })\n      .on(\"transactionHash\", onTxHash);\n\n    return { success: true };\n  } catch (err) {\n    console.error(\"Deposit failed\", err);\n    return { success: false };\n  }\n};\n","import * as React from \"react\";\nimport Button from \"../../../../../ui-library/button/button\";\nimport {\n  approveDrcSpending,\n  estimateDrcApproveSpendingGas,\n  getDrcAllowance,\n} from \"../../../../../../utils/web3/drc-approval\";\nimport { getTransactionUrl } from \"../../../../../../utils/etherscan\";\nimport {\n  formatCurrency,\n  formatNumber,\n} from \"../../../../../../utils/format-number\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport TransactionStatusToast from \"../../../../../ui-library/transaction-status-toast/transaction-status-toast\";\nimport Text from \"../../../../../ui-library/text/text\";\nimport { CurrencySymbol } from \"../../../../../../../types/currency\";\nimport { TransactionStatus } from \"../../../../../../../types/dr-vault\";\nimport { DrcVaultContext } from \"../../../../../../site-context/dr-context/drc-vault-context\";\nimport {\n  drcVaultDeposit,\n  estimateDepositGas,\n} from \"../../../../../../utils/web3/drc-vault/vault-actions/vault-deposit-actions\";\nimport styles from \"./deposit-withdraw-action.styles\";\n\ninterface DepositButtonProps {\n  amount: number;\n  approveAmount: number;\n  onSuccess: () => void;\n}\n\nconst DepositButton: React.FC<DepositButtonProps> = ({\n  amount,\n  approveAmount,\n  onSuccess,\n}) => {\n  const [approvalStatus, setApprovalStatus] =\n    React.useState<TransactionStatus>(\"none\");\n  const [approvalTxHash, setApprovalTxHash] = React.useState<\n    string | undefined\n  >();\n  const [depositStatus, setDepositStatus] =\n    React.useState<TransactionStatus>(\"none\");\n  const [depositTxHash, setDepositTxHash] = React.useState<\n    string | undefined\n  >();\n\n  const [allowance, setAllowance] = React.useState<number>(0);\n  const [gasEstimation, setGasEstimation] = React.useState<number>(0);\n\n  const {\n    chainId,\n    contractAddress,\n    web3,\n    userAccount,\n    drcBalance: { data: drcBalance = 0 },\n    updateVaultData,\n  } = React.useContext(DrcVaultContext);\n\n  React.useEffect(() => {\n    if (amount > 0) {\n      if (amount > allowance) {\n        estimateDrcApproveSpendingGas({\n          web3,\n          userAccount,\n          contractAddress,\n          amount: approveAmount,\n          chainId,\n        }).then((data) => setGasEstimation(data || 0));\n      } else {\n        estimateDepositGas({\n          web3,\n          userAccount,\n          contractAddress,\n          amount,\n        }).then((data) => setGasEstimation(data || 0));\n      }\n    } else {\n      setGasEstimation(0);\n    }\n  }, [amount, allowance, userAccount]);\n\n  const queryAllowance = async () => {\n    const contractAllowance = await getDrcAllowance({\n      web3,\n      userAccount,\n      contractAddress,\n      chainId,\n    });\n    setAllowance(contractAllowance || 0);\n  };\n\n  React.useEffect(() => {\n    queryAllowance();\n  }, [userAccount, chainId]);\n\n  const handleApproval = async () => {\n    if (approvalStatus !== \"pending\" && amount > 0 && amount > allowance) {\n      setDepositStatus(\"none\");\n      setDepositTxHash(undefined);\n      setApprovalStatus(\"pending\");\n      const { success } = await approveDrcSpending({\n        web3,\n        userAccount,\n        contractAddress,\n        amount: approveAmount,\n        onTxHash: setApprovalTxHash,\n        chainId,\n      });\n      if (success) {\n        await queryAllowance();\n        setApprovalStatus(\"success\");\n      } else {\n        setApprovalStatus(\"failed\");\n      }\n    }\n  };\n\n  const handleDeposit = async () => {\n    if (depositStatus !== \"pending\" && amount > 0 && allowance >= amount) {\n      setApprovalStatus(\"none\");\n      setApprovalTxHash(undefined);\n      setDepositStatus(\"pending\");\n      const { success } = await drcVaultDeposit({\n        web3,\n        userAccount,\n        contractAddress,\n        amount,\n        onTxHash: setDepositTxHash,\n      });\n      if (success) {\n        setDepositStatus(\"success\");\n        updateVaultData();\n        onSuccess();\n      } else {\n        setDepositStatus(\"failed\");\n      }\n    }\n  };\n\n  const formattedAmount = formatNumber({ value: amount });\n\n  const approvalMessageMapping: Record<TransactionStatus, string> = {\n    none: `Approve ${formattedAmount} DRC`,\n    pending:\n      \"Please wait a moment, or check on Etherscan if this hangs for too long\",\n    success: \"You can now deposit DRC\",\n    failed: \"Please try approve again\",\n  };\n\n  const depositMessageMapping: Record<TransactionStatus, string> = {\n    none: `Deposit ${formattedAmount} DRC`,\n    pending:\n      \"Please wait a moment, or check on Etherscan if this hangs for too long\",\n    success: `DRC successfully deposited`,\n    failed: \"Please try depositing again\",\n  };\n\n  if (drcBalance === 0 || amount > drcBalance) {\n    return (\n      <Button css={styles.button} type=\"primary\">\n        INSUFFICIENT DRC\n      </Button>\n    );\n  }\n\n  return (\n    <>\n      <div css={{ display: \"flex\", alignItems: \"center\" }}>\n        {amount > allowance && (\n          <Button\n            css={{ width: \"calc(50% - 10px)\", marginRight: grid(2) }}\n            type=\"primary\"\n            isDisabled={\n              approvalStatus === \"pending\" ||\n              amount <= allowance ||\n              amount === 0\n            }\n            onClick={handleApproval}\n            isLoading={approvalStatus === \"pending\"}\n          >\n            APPROVE\n          </Button>\n        )}\n\n        <Button\n          css={{ width: amount <= allowance ? \"100%\" : \"calc(50% - 10px)\" }}\n          type=\"primary\"\n          isDisabled={\n            depositStatus === \"pending\" || amount > allowance || amount === 0\n          }\n          onClick={handleDeposit}\n          isLoading={depositStatus === \"pending\"}\n        >\n          {depositStatus === \"pending\" ? \"PENDING DEPOSIT\" : \"DEPOSIT\"}\n        </Button>\n      </div>\n\n      {gasEstimation > 0 && (\n        <Text\n          component=\"div\"\n          type=\"secondary\"\n          textSize={12}\n          textAlign=\"center\"\n          margin={{ top: grid(1.5) }}\n        >\n          Estimated transaction gas fee:{\" \"}\n          {formatCurrency({\n            value: gasEstimation,\n            currency: CurrencySymbol.USD,\n          })}\n        </Text>\n      )}\n\n      <TransactionStatusToast\n        status={approvalStatus}\n        name=\"Approval\"\n        message={approvalMessageMapping[approvalStatus]}\n        url={\n          approvalTxHash\n            ? getTransactionUrl(approvalTxHash, chainId)\n            : undefined\n        }\n      />\n\n      <TransactionStatusToast\n        status={depositStatus}\n        name=\"Deposit\"\n        message={depositMessageMapping[depositStatus]}\n        url={\n          depositTxHash ? getTransactionUrl(depositTxHash, chainId) : undefined\n        }\n      />\n    </>\n  );\n};\n\nexport default DepositButton;\n","import { Interpolation } from \"@emotion/core\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport { Device } from \"../../../../../ui-library/design-tokens/media-queries\";\n\nconst root: Interpolation = {\n  position: \"relative\",\n};\n\nconst content: Interpolation = {\n  maxWidth: grid(76),\n  padding: `${grid(3)} ${grid(2)} ${grid(8)}`,\n\n  [Device.DesktopTablet]: {\n    padding: `${grid(3)} ${grid(3)} ${grid(8)}`,\n  },\n};\n\nconst styles = {\n  root,\n  content,\n};\n\nexport default styles;\n","import { Interpolation } from \"@emotion/core\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport { Device } from \"../../../../../ui-library/design-tokens/media-queries\";\n\nconst cardHeader: Interpolation = {\n  display: \"flex\",\n  padding: grid(2),\n  cursor: \"pointer\",\n};\n\nconst arrow: Interpolation = {\n  flexShrink: 0,\n  marginRight: grid(1),\n};\n\nconst arrowDown: Interpolation = {\n  \"> img\": {\n    transform: \"rotate(180deg)\",\n  },\n};\n\nconst heading: Interpolation = {\n  flex: 1,\n};\n\nconst chevron: Interpolation = {\n  alignSelf: \"center\",\n  width: grid(3),\n  height: grid(3),\n  transition: \"all 0.2s ease\",\n};\n\nconst content: Interpolation = {\n  padding: `${grid(2)} ${grid(2)} ${grid(3)}`,\n\n  [Device.DesktopTablet]: {\n    paddingLeft: grid(5.5),\n  },\n};\n\nconst styles = {\n  cardHeader,\n  arrow,\n  arrowDown,\n  heading,\n  chevron,\n  content,\n};\n\nexport default styles;\n","import * as React from \"react\";\nimport AnimateHeight from \"react-animate-height\";\nimport ChevronBlackIcon from \"../../../../../../images/icons/chevron-icon-black.svg\";\nimport ChevronWhiteIcon from \"../../../../../../images/icons/chevron-icon-white.svg\";\nimport ArrowIconWhite from \"../../../../../../images/icons/arrow-icon-white.svg\";\nimport ArrowIconBlack from \"../../../../../../images/icons/arrow-icon-black.svg\";\nimport { SiteContext } from \"../../../../../../site-context/site-context\";\nimport Separator from \"../../../../../ui-library/separator/separator\";\nimport InfoCard from \"../../../../../ui-library/vault-components/info-card/info-card\";\nimport Image from \"../../../../../ui-library/image/image\";\nimport { DrcVaultTransactionInfo } from \"../../../../../../../types/dr-vault\";\nimport Text from \"../../../../../ui-library/text/text\";\nimport { Fonts } from \"../../../../../ui-library/design-tokens/fonts\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport LinkOut from \"../../../../../ui-library/link-out/link-out\";\nimport { getTransactionUrl } from \"../../../../../../utils/etherscan\";\nimport { formatNumber } from \"../../../../../../utils/format-number\";\nimport { DrcVaultContext } from \"../../../../../../site-context/dr-context/drc-vault-context\";\nimport styles from \"./transaction-history-card.styles\";\n\ninterface TransactionHistoryCardProps extends DrcVaultTransactionInfo {\n  isDefaultOpen?: boolean;\n}\n\nconst TransactionHistoryCard: React.FC<TransactionHistoryCardProps> = ({\n  isDefaultOpen,\n  eventName,\n  transactionHash,\n  timeFormated,\n  drcAmount,\n}) => {\n  const { isDarkMode } = React.useContext(SiteContext);\n  const { chainId } = React.useContext(DrcVaultContext);\n\n  const [isOpen, setOpen] = React.useState<boolean>(isDefaultOpen || false);\n\n  const chevronIcon = isDarkMode ? ChevronWhiteIcon : ChevronBlackIcon;\n  const arrowIcon = isDarkMode ? ArrowIconWhite : ArrowIconBlack;\n\n  const isArrowDown = eventName === \"Deposit\";\n\n  return (\n    <InfoCard isNoPadding={true}>\n      <div css={styles.cardHeader} onClick={() => setOpen(!isOpen)}>\n        <div css={[styles.arrow, isArrowDown && styles.arrowDown]}>\n          <Image src={arrowIcon} alt=\"Arrow\" />\n        </div>\n        <div css={styles.heading}>\n          <Text\n            component=\"div\"\n            textSize={20}\n            weight={Fonts.Weight.Bold}\n            margin={{ bottom: grid(1) }}\n          >\n            {eventName}\n          </Text>\n\n          <Text component=\"div\" type=\"secondary\" textSize={12}>\n            {timeFormated}\n          </Text>\n        </div>\n\n        <div\n          css={[\n            styles.chevron,\n            {\n              transform: `rotateX(${isOpen ? 0 : 180}deg)`,\n            },\n          ]}\n        >\n          <Image src={chevronIcon} alt=\"Chevron icon\" />\n        </div>\n      </div>\n\n      <AnimateHeight duration={200} height={isOpen ? \"auto\" : 0}>\n        <Separator />\n\n        <div css={styles.content}>\n          <Text\n            component=\"div\"\n            weight={Fonts.Weight.Bold}\n            margin={{ bottom: grid(1) }}\n          >\n            Amount\n          </Text>\n\n          <Text component=\"div\" type=\"secondary\" margin={{ bottom: grid(2) }}>\n            {!!drcAmount && `${formatNumber({ value: drcAmount })} DRC`}\n          </Text>\n\n          <Text\n            component=\"div\"\n            weight={Fonts.Weight.Bold}\n            margin={{ bottom: grid(1) }}\n          >\n            Transaction Hash\n          </Text>\n\n          <LinkOut\n            url={getTransactionUrl(transactionHash, chainId)}\n            underline={true}\n          >\n            {transactionHash.slice(0, 25)}...\n          </LinkOut>\n        </div>\n      </AnimateHeight>\n    </InfoCard>\n  );\n};\n\nexport default TransactionHistoryCard;\n","import * as React from \"react\";\nimport { SiteContext } from \"../../../../../../site-context/site-context\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport Loader from \"../../../../../ui-library/loader/loader\";\nimport MarginBox from \"../../../../../ui-library/margin-box/margin-box\";\nimport SlideOut from \"../../../../../ui-library/slide-out/slide-out\";\nimport Heading from \"../../../../../ui-library/text/heading\";\nimport SlideOutHeader from \"../../../../../ui-library/vault-components/slide-out-vault-info/slide-out-header\";\nimport { DrcVaultContext } from \"../../../../../../site-context/dr-context/drc-vault-context\";\nimport styles from \"./transaction-history.styles\";\nimport TransactionHistoryCard from \"./transaction-history-card\";\n\ninterface SlideOutTransactionHistoriesProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst SlideOutTransactionHistories: React.FC<SlideOutTransactionHistoriesProps> =\n  ({ isOpen, onClose }) => {\n    const {\n      userTransactions: { data: transactions, loading },\n    } = React.useContext(DrcVaultContext);\n\n    const { isMobile } = React.useContext(SiteContext);\n\n    return (\n      <SlideOut\n        isOpen={isOpen}\n        onHide={onClose}\n        isFullWidthOnMobile={true}\n        enableBodyLock={true}\n      >\n        <div css={styles.root}>\n          <SlideOutHeader\n            heading=\"Your transaction history\"\n            onClose={onClose}\n          />\n\n          <div css={styles.content}>\n            {isMobile && (\n              <Heading margin={{ bottom: grid(3) }}>\n                Your transaction history\n              </Heading>\n            )}\n\n            {loading && <Loader />}\n\n            {transactions?.map((tx, index) => (\n              <MarginBox key={tx.id} margin={{ bottom: grid(2) }}>\n                <TransactionHistoryCard {...tx} isDefaultOpen={index === 0} />\n              </MarginBox>\n            ))}\n          </div>\n        </div>\n      </SlideOut>\n    );\n  };\n\nexport default SlideOutTransactionHistories;\n","import * as React from \"react\";\nimport ListIcon from \"../../../../../../images/icons/list-icon.svg\";\nimport Image from \"../../../../../ui-library/image/image\";\nimport SlideOutTransactionHistories from \"../transaction-history/transaction-history\";\nimport { DrcVaultContext } from \"../../../../../../site-context/dr-context/drc-vault-context\";\nimport styles from \"./deposit-withdraw-action.styles\";\n\nconst ViewTransactionHistory: React.FC = () => {\n  const [isTxHistoryOpen, setTxHistoryOpen] = React.useState<boolean>(false);\n\n  const {\n    userTransactions: { data: userTransactions },\n  } = React.useContext(DrcVaultContext);\n\n  return (\n    <>\n      {userTransactions && userTransactions.length > 0 && (\n        <div\n          css={styles.txHistoryButton}\n          onClick={() => setTxHistoryOpen(true)}\n        >\n          <Image src={ListIcon} alt=\"List\" />\n          View transaction history\n        </div>\n      )}\n\n      <SlideOutTransactionHistories\n        isOpen={isTxHistoryOpen}\n        onClose={() => setTxHistoryOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default ViewTransactionHistory;\n","import * as React from \"react\";\nimport { Fonts } from \"../../../../../ui-library/design-tokens/fonts\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport MarginBox from \"../../../../../ui-library/margin-box/margin-box\";\nimport DrcNumberInput from \"../../../../../ui-library/drc-number-input/drc-number-input\";\nimport Text from \"../../../../../ui-library/text/text\";\nimport {\n  formatCurrency,\n  formatNumber,\n} from \"../../../../../../utils/format-number\";\nimport { CurrencySymbol } from \"../../../../../../../types/currency\";\nimport Heading from \"../../../../../ui-library/text/heading\";\nimport { DrcVaultContext } from \"../../../../../../site-context/dr-context/drc-vault-context\";\nimport styles from \"./deposit-withdraw-action.styles\";\nimport DepositButton from \"./deposit-button\";\nimport ViewTransactionHistory from \"./view-transaction-history\";\n\nconst DepositFromWallet: React.FC = () => {\n  const [value, setValue] = React.useState<number>(0);\n\n  const {\n    drcBalance: { data: drcBalance = 0 },\n    drcPrice: { data: price = 0 },\n  } = React.useContext(DrcVaultContext);\n\n  const handleDepositFinish = () => {\n    setValue(0);\n  };\n\n  return (\n    <div>\n      <div css={styles.content}>\n        <div css={styles.headingContainer}>\n          <div css={styles.heading}>Your wallet balance</div>\n          <div css={styles.headingContent}>\n            <MarginBox margin={{ bottom: grid(0.5) }}>\n              <div css={styles.heading}>\n                {formatNumber({ value: drcBalance })} DRC\n              </div>\n            </MarginBox>\n            <Text component=\"div\" type=\"secondary\" textSize={14}>\n              {formatCurrency({\n                value: drcBalance * price,\n                currency: CurrencySymbol.USD,\n              })}{\" \"}\n              USD\n            </Text>\n          </div>\n        </div>\n\n        <Heading margin={{ bottom: grid(2.5) }}>Amount to Deposit</Heading>\n\n        <MarginBox margin={{ bottom: grid(2.5) }}>\n          <DrcNumberInput\n            value={value}\n            onValueSet={setValue}\n            max={drcBalance}\n          />\n        </MarginBox>\n\n        <Text\n          component=\"div\"\n          type=\"secondary\"\n          textSize={14}\n          textAlign=\"center\"\n          margin={{ bottom: grid(0.5) }}\n        >\n          Equivalent USD Value\n        </Text>\n\n        <Text\n          component=\"div\"\n          textAlign=\"center\"\n          weight={Fonts.Weight.Bold}\n          margin={{ bottom: grid(3) }}\n        >\n          {formatCurrency({\n            value: value * price,\n            currency: CurrencySymbol.USD,\n          })}\n        </Text>\n\n        <MarginBox margin={{ bottom: grid(2.5) }}>\n          <DepositButton\n            amount={value}\n            approveAmount={drcBalance}\n            onSuccess={handleDepositFinish}\n          />\n        </MarginBox>\n\n        <ViewTransactionHistory />\n      </div>\n    </div>\n  );\n};\n\nexport default DepositFromWallet;\n","import { Interpolation } from \"@emotion/core\";\nimport { Theme } from \"../../../../../../types/theme\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\n\nconst deaktopHeadings: Interpolation = {\n  display: \"flex\",\n  marginBottom: grid(2.5),\n  \"> *\": {\n    flex: 1,\n  },\n};\n\nconst desktopContainer = (theme: Theme): Interpolation => ({\n  display: \"flex\",\n  border: `1px solid ${theme.border}`,\n  borderTop: `5px solid ${theme.foreground}`,\n  borderRadius: 2,\n\n  \"> *\": {\n    width: \"50%\",\n    flexShrink: 1,\n    flexGrow: 1,\n    height: \"100%\",\n  },\n\n  \"> div:first-of-type\": {\n    borderRight: `1px solid ${theme.border}`,\n  },\n});\n\nconst mobileContainer = (theme: Theme): Interpolation => ({\n  borderTop: `5px solid ${theme.foreground}`,\n});\n\nconst styles = {\n  deaktopHeadings,\n  desktopContainer,\n  mobileContainer,\n};\n\nexport default styles;\n","import * as React from \"react\";\nimport { SiteContext } from \"../../../../../site-context/site-context\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport InfoBox from \"../../../../ui-library/info-box/info-box\";\nimport MarginBox from \"../../../../ui-library/margin-box/margin-box\";\nimport Heading from \"../../../../ui-library/text/heading\";\nimport UserAssetsInVault from \"./user-assets-in-vault/user-assets-in-vault\";\nimport DepositFromWallet from \"./deposit-withdraw-action/deposit-from-wallet\";\nimport styles from \"./vault-action.styles\";\n\nconst VaultActionDeposit: React.FC = () => {\n  const { isMobile } = React.useContext(SiteContext);\n\n  const depositInfo = (\n    <InfoBox>\n      <strong>Deposit fees:</strong> 0%\n    </InfoBox>\n  );\n\n  return (\n    <div>\n      {!isMobile && (\n        <>\n          <div css={styles.deaktopHeadings}>\n            <Heading textAlign=\"center\">DRC in Wallet</Heading>\n            <Heading textAlign=\"center\">DRC in DRC Vault</Heading>\n          </div>\n\n          <div css={styles.desktopContainer}>\n            <DepositFromWallet />\n            <UserAssetsInVault />\n          </div>\n          {depositInfo}\n        </>\n      )}\n\n      {isMobile && (\n        <>\n          <Heading textAlign=\"center\" margin={{ bottom: grid(2.5) }}>\n            DRC in Wallet\n          </Heading>\n          <div css={styles.mobileContainer}>\n            <DepositFromWallet />\n          </div>\n          <MarginBox margin={{ bottom: grid(3) }}>{depositInfo}</MarginBox>\n\n          <Heading textAlign=\"center\" margin={{ bottom: grid(2.5) }}>\n            DRC in DRC Vault\n          </Heading>\n          <div css={styles.mobileContainer}>\n            <UserAssetsInVault />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default VaultActionDeposit;\n","import Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport IDRCVault from \"../../../../contracts/IDRCVault.json\";\nimport { getEthPrice } from \"../../../uniswap-graph/eth-price\";\nimport { getGasPrice } from \"../../gas-price\";\n\ninterface WithdrawGasInput {\n  web3: Web3;\n  userAccount: string;\n  contractAddress: string;\n  amount: number;\n}\n\nexport const estimateWithdrawGas = async ({\n  web3,\n  userAccount,\n  contractAddress,\n  amount,\n}: WithdrawGasInput) => {\n  if (amount === 0) {\n    return 0;\n  }\n\n  const contract = new web3.eth.Contract(\n    IDRCVault.abi as AbiItem[],\n    contractAddress\n  );\n\n  try {\n    const gasPrice = await getGasPrice(web3);\n    const gasLimit = await contract.methods\n      .withdraw(amount)\n      .estimateGas({ from: userAccount, gasPrice });\n\n    if (gasPrice) {\n      const ethAmount =\n        (Number(web3.utils.fromWei(gasPrice, \"gwei\")) *\n          Math.round(gasLimit * 1.1)) /\n        10 ** 9;\n      const ethPrice = (await getEthPrice()) || 0;\n\n      return ethAmount * ethPrice;\n    } else {\n      return null;\n    }\n  } catch (err) {\n    return null;\n  }\n};\n\ninterface VaultWithdrawInput {\n  web3: Web3;\n  userAccount: string;\n  contractAddress: string;\n  amount: number;\n  onTxHash?: (transactionHash: string) => void;\n}\n\nexport const drcVaultWithdraw = async ({\n  web3,\n  userAccount,\n  contractAddress,\n  amount,\n  onTxHash,\n}: VaultWithdrawInput) => {\n  try {\n    const contract = new web3.eth.Contract(\n      IDRCVault.abi as AbiItem[],\n      contractAddress\n    );\n\n    const gasPrice = await getGasPrice(web3);\n    let gasLimit: number | undefined = undefined;\n    try {\n      gasLimit = await contract.methods\n        .withdraw(amount)\n        .estimateGas({ from: userAccount, gasPrice });\n    } catch (err) {\n      console.log(\"Can't estimate gas\", err);\n    }\n\n    await contract.methods\n      .withdraw(amount)\n      .send({\n        from: userAccount,\n        gasPrice,\n        gas: gasLimit ? Math.round(gasLimit * 1.1) : undefined,\n      })\n      .on(\"transactionHash\", onTxHash);\n\n    return { success: true };\n  } catch (err) {\n    console.error(\"Withdraw failed\", err);\n    return { success: false };\n  }\n};\n","import * as React from \"react\";\nimport Button from \"../../../../../ui-library/button/button\";\nimport { getTransactionUrl } from \"../../../../../../utils/etherscan\";\nimport {\n  formatCurrency,\n  formatNumber,\n} from \"../../../../../../utils/format-number\";\nimport { DR_OVERVIEW } from \"../../../../../../constants/elements\";\nimport { anchorToElement } from \"../../../../../../utils/dom/anchor-to-hash\";\nimport TransactionStatusToast from \"../../../../../ui-library/transaction-status-toast/transaction-status-toast\";\nimport Text from \"../../../../../ui-library/text/text\";\nimport { CurrencySymbol } from \"../../../../../../../types/currency\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport { TransactionStatus } from \"../../../../../../../types/dr-vault\";\nimport { DrcVaultContext } from \"../../../../../../site-context/dr-context/drc-vault-context\";\nimport {\n  drcVaultWithdraw,\n  estimateWithdrawGas,\n} from \"../../../../../../utils/web3/drc-vault/vault-actions/vault-withdraw-actions\";\nimport styles from \"./deposit-withdraw-action.styles\";\n\ninterface WithdrawButtonProps {\n  amount: number;\n  onSuccess: () => void;\n}\n\nconst WithdrawButton: React.FC<WithdrawButtonProps> = ({\n  amount,\n  onSuccess,\n}) => {\n  const [withdrawalStatus, setWithdrawalStatus] =\n    React.useState<TransactionStatus>(\"none\");\n  const [withdrawalTxHash, setWithdrawalTxHash] = React.useState<\n    string | undefined\n  >();\n\n  const [gasEstimation, setGasEstimation] = React.useState<number>(0);\n\n  const {\n    chainId,\n    contractAddress,\n    web3,\n    userAccount,\n    userVaultHolding: { data: holding },\n    updateVaultData,\n  } = React.useContext(DrcVaultContext);\n\n  React.useEffect(() => {\n    if (amount > 0) {\n      estimateWithdrawGas({\n        web3,\n        userAccount,\n        contractAddress,\n        amount,\n      }).then((data) => setGasEstimation(data || 0));\n    }\n  }, [amount]);\n\n  const handleWithdraw = async () => {\n    if (amount > 0) {\n      setWithdrawalStatus(\"pending\");\n\n      const data = await drcVaultWithdraw({\n        web3,\n        userAccount,\n        contractAddress,\n        amount,\n        onTxHash: setWithdrawalTxHash,\n      });\n      if (data.success) {\n        updateVaultData();\n        onSuccess();\n        setWithdrawalStatus(\"success\");\n\n        setTimeout(() => {\n          anchorToElement(DR_OVERVIEW);\n        }, 2000);\n      } else {\n        setWithdrawalStatus(\"failed\");\n      }\n    }\n  };\n\n  const formattedAmount = formatNumber({ value: amount });\n\n  const withdrawMessageMapping: Record<TransactionStatus, string> = {\n    none: `Withdraw ${formattedAmount} DRC`,\n    pending:\n      \"Please wait a moment, or check on Etherscan if this hangs for too long\",\n    success: \"DRC successfully withdrawn\",\n    failed: \"Please try withdrawing again\",\n  };\n\n  if (!holding) {\n    return (\n      <Button css={styles.button} type=\"primary\">\n        NO DRC TO WITHDRAW\n      </Button>\n    );\n  }\n\n  return (\n    <>\n      <div css={{ display: \"flex\", alignItems: \"center\" }}>\n        <Button\n          css={styles.button}\n          type=\"primary\"\n          isDisabled={withdrawalStatus === \"pending\" || amount > holding}\n          onClick={handleWithdraw}\n          isLoading={withdrawalStatus === \"pending\"}\n        >\n          {withdrawalStatus === \"pending\" ? \"PENDING WITHDRAWAL\" : \"WITHDRAW\"}\n        </Button>\n      </div>\n\n      {gasEstimation > 0 && (\n        <Text\n          component=\"div\"\n          type=\"secondary\"\n          textSize={12}\n          textAlign=\"center\"\n          margin={{ top: grid(1.5) }}\n        >\n          Estimated transaction gas fee:{\" \"}\n          {formatCurrency({\n            value: gasEstimation,\n            currency: CurrencySymbol.USD,\n          })}\n        </Text>\n      )}\n\n      <TransactionStatusToast\n        status={withdrawalStatus}\n        name=\"Withdrawal\"\n        message={withdrawMessageMapping[withdrawalStatus]}\n        url={\n          withdrawalTxHash\n            ? getTransactionUrl(withdrawalTxHash, chainId)\n            : undefined\n        }\n      />\n    </>\n  );\n};\n\nexport default WithdrawButton;\n","import * as React from \"react\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport MarginBox from \"../../../../../ui-library/margin-box/margin-box\";\nimport DrcNumberInput from \"../../../../../ui-library/drc-number-input/drc-number-input\";\nimport Text from \"../../../../../ui-library/text/text\";\nimport Heading from \"../../../../../ui-library/text/heading\";\nimport {\n  formatCurrency,\n  formatNumber,\n} from \"../../../../../../utils/format-number\";\nimport { CurrencySymbol } from \"../../../../../../../types/currency\";\nimport { Fonts } from \"../../../../../ui-library/design-tokens/fonts\";\nimport Separator from \"../../../../../ui-library/separator/separator\";\nimport { DrcVaultContext } from \"../../../../../../site-context/dr-context/drc-vault-context\";\nimport styles from \"./deposit-withdraw-action.styles\";\nimport WithdrawButton from \"./withdraw-button\";\nimport ViewTransactionHistory from \"./view-transaction-history\";\n\nconst WithdrawToWallet: React.FC = () => {\n  const [value, setValue] = React.useState<number>(0);\n\n  const {\n    userVaultHolding: { data: holding },\n    drcPrice: { data: drcPrice },\n  } = React.useContext(DrcVaultContext);\n\n  const usdValue =\n    holding !== undefined && drcPrice ? holding * drcPrice : undefined;\n\n  const handleWithdrawFinish = () => {\n    setValue(0);\n  };\n\n  return (\n    <div>\n      <div css={styles.content}>\n        <div css={styles.headingContainer}>\n          <div css={styles.heading}>Your DRC Vault balance</div>\n          <div css={styles.headingContent}>\n            <MarginBox margin={{ bottom: grid(0.5) }}>\n              <div css={styles.heading}>\n                {formatNumber({\n                  value: holding,\n                })}{\" \"}\n                DRC\n              </div>\n            </MarginBox>\n            <Text component=\"div\" type=\"secondary\" textSize={14}>\n              {formatCurrency({\n                value: usdValue,\n                currency: CurrencySymbol.USD,\n              }) || \"$-\"}{\" \"}\n              USD\n            </Text>\n          </div>\n        </div>\n\n        <Heading margin={{ bottom: grid(2.5) }}>Amount to Withdraw</Heading>\n\n        <MarginBox margin={{ bottom: grid(3) }}>\n          <DrcNumberInput\n            value={value}\n            onValueSet={setValue}\n            max={holding || 0}\n          />\n        </MarginBox>\n\n        <MarginBox margin={{ bottom: grid(3) }}>\n          <WithdrawButton amount={value} onSuccess={handleWithdrawFinish} />\n        </MarginBox>\n\n        <Text\n          component=\"div\"\n          textSize={14}\n          weight={Fonts.Weight.Bold}\n          css={styles.inlineContainer}\n          margin={{ bottom: grid(2) }}\n        >\n          <span>Amount to receive</span>\n          <span>\n            {formatNumber({\n              value,\n            })}{\" \"}\n            DRC\n          </span>\n        </Text>\n\n        <Separator margin={{ bottom: grid(2) }} />\n\n        <ViewTransactionHistory />\n      </div>\n    </div>\n  );\n};\n\nexport default WithdrawToWallet;\n","import * as React from \"react\";\nimport { SiteContext } from \"../../../../../site-context/site-context\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport InfoBox from \"../../../../ui-library/info-box/info-box\";\nimport MarginBox from \"../../../../ui-library/margin-box/margin-box\";\nimport Heading from \"../../../../ui-library/text/heading\";\nimport UserAssetsInVault from \"./user-assets-in-vault/user-assets-in-vault\";\nimport styles from \"./vault-action.styles\";\nimport WithdrawToWallet from \"./deposit-withdraw-action/withdraw-to-wallet\";\n\nconst VaultActionWithdraw: React.FC = () => {\n  const { isMobile } = React.useContext(SiteContext);\n\n  const withdrawalInfo = (\n    <InfoBox>\n      <strong>Withdrawal fees:</strong> 0%\n    </InfoBox>\n  );\n\n  return (\n    <div>\n      {!isMobile && (\n        <>\n          <div css={styles.deaktopHeadings}>\n            <Heading textAlign=\"center\">DRC in DRC Vault</Heading>\n            <Heading textAlign=\"center\">Withdraw DRC to Wallet</Heading>\n          </div>\n\n          <div css={styles.desktopContainer}>\n            <UserAssetsInVault />\n            <WithdrawToWallet />\n          </div>\n          {withdrawalInfo}\n        </>\n      )}\n\n      {isMobile && (\n        <>\n          <Heading textAlign=\"center\" margin={{ bottom: grid(2.5) }}>\n            Withdraw DRC to Wallet\n          </Heading>\n          <div css={styles.mobileContainer}>\n            <WithdrawToWallet />\n          </div>\n          <MarginBox margin={{ bottom: grid(3) }}>{withdrawalInfo}</MarginBox>\n\n          <Heading textAlign=\"center\" margin={{ bottom: grid(2.5) }}>\n            DRC in DRC Vault\n          </Heading>\n          <div css={styles.mobileContainer}>\n            <UserAssetsInVault />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default VaultActionWithdraw;\n","import * as React from \"react\";\nimport { DrVaultUserAction } from \"../../../../../../types/dr-vault\";\nimport { MANAGE_DRC_VAULT } from \"../../../../../constants/elements\";\nimport { DrcVaultContext } from \"../../../../../site-context/dr-context/drc-vault-context\";\nimport { anchorToElement } from \"../../../../../utils/dom/anchor-to-hash\";\nimport Container from \"../../../../ui-library/container/container\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport ItemPickerTabs from \"../../../../ui-library/item-picker-tabs/item-picker-tabs\";\nimport MarginBox from \"../../../../ui-library/margin-box/margin-box\";\nimport Heading from \"../../../../ui-library/text/heading\";\nimport VaultActionDeposit from \"../vault-actions/vault-action-deposit\";\nimport VaultActionWithdraw from \"../vault-actions/vault-action-withdraw\";\n\nconst actionItems = [\n  { label: \"Deposit\", value: \"deposit\" },\n  { label: \"Withdraw\", value: \"withdraw\" },\n];\n\nconst ManageYourDr: React.FC = () => {\n  const { appState } = React.useContext(DrcVaultContext);\n  const { activeAction, setActiveDrAction } = appState;\n\n  const handleClickItem = (item: string) => {\n    setActiveDrAction(item as DrVaultUserAction);\n    anchorToElement(MANAGE_DRC_VAULT);\n  };\n\n  return (\n    <>\n      <Container id={MANAGE_DRC_VAULT}>\n        <Heading\n          textAlign=\"center\"\n          margin={{ desktop: { bottom: grid(4) }, mobile: { bottom: grid(4) } }}\n        >\n          Manage your DRC Vault\n        </Heading>\n\n        <MarginBox\n          margin={{ desktop: { bottom: grid(4) }, mobile: { bottom: grid(4) } }}\n        >\n          <ItemPickerTabs\n            itemPickerName=\"drcVaultUserActionType\"\n            activeItemValue={activeAction}\n            items={actionItems}\n            isUniWidth={true}\n            onItemClick={handleClickItem}\n          />\n        </MarginBox>\n      </Container>\n\n      <Container fullWidthOnMobile={true}>\n        {activeAction === \"deposit\" && <VaultActionDeposit />}\n        {activeAction === \"withdraw\" && <VaultActionWithdraw />}\n      </Container>\n    </>\n  );\n};\n\nexport default ManageYourDr;\n","import { Interpolation } from \"@emotion/core\";\nimport { Theme } from \"../../../../../../types/theme\";\nimport { Fonts } from \"../../../../ui-library/design-tokens/fonts\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport { Device } from \"../../../../ui-library/design-tokens/media-queries\";\n\nconst root: Interpolation = {\n  position: \"relative\",\n};\n\nconst back: Interpolation = {\n  position: \"absolute\",\n  top: grid(-0.5),\n  left: 0,\n  zIndex: 1,\n\n  [Device.Mobile]: {\n    left: grid(2),\n  },\n};\n\nconst disconnect: Interpolation = {\n  position: \"absolute\",\n  top: -3,\n  right: 0,\n  fontSize: 14,\n  cursor: \"pointer\",\n  zIndex: 1,\n\n  [Device.Mobile]: {\n    right: grid(2),\n  },\n};\n\nconst topContainer: Interpolation = {\n  padding: `${grid(4.5)} ${grid(2)} ${grid(3)}`,\n};\n\nconst badge: Interpolation = {\n  position: \"absolute\",\n  top: grid(1.5),\n  right: grid(1.5),\n};\n\nconst buyDrcButton: Interpolation = {\n  position: \"absolute\",\n  top: grid(1.5),\n  left: grid(1.5),\n};\n\nconst walletHeading: Interpolation = {\n  fontSize: 20,\n  fontWeight: Fonts.Weight.Bold,\n  marginBottom: grid(1.5),\n};\n\nconst drcBalance: Interpolation = {\n  fontSize: 24,\n  fontWeight: Fonts.Weight.Bold,\n  marginBottom: grid(2),\n  [Device.DesktopTablet]: {\n    fontSize: 28,\n  },\n};\n\nconst userAccountLink = (theme: Theme): Interpolation => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  color: theme.text,\n});\n\nconst bottomContainer: Interpolation = {\n  padding: `${grid(3)} ${grid(2)} 0`,\n  [Device.DesktopTablet]: {\n    padding: `${grid(3)} ${grid(2)} ${grid(3)}`,\n  },\n};\n\nconst userVaultWorth: Interpolation = {\n  fontSize: 34,\n  fontWeight: Fonts.Weight.Bold,\n  marginBottom: grid(1),\n  [Device.DesktopTablet]: {\n    fontSize: 40,\n  },\n};\n\nconst text = (theme: Theme): Interpolation => ({\n  color: theme.text,\n});\n\nconst styles = {\n  root,\n  back,\n  disconnect,\n  topContainer,\n  badge,\n  buyDrcButton,\n  walletHeading,\n  drcBalance,\n  userAccountLink,\n  bottomContainer,\n  userVaultWorth,\n  text,\n};\n\nexport default styles;\n","import * as React from \"react\";\nimport Back from \"../../../../ui-library/breadcrumb/back\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport DrCard from \"../../../../ui-library/vault-components/dr-card/dr-card\";\nimport Heading from \"../../../../ui-library/text/heading\";\nimport { SiteContext } from \"../../../../../site-context/site-context\";\nimport Separator from \"../../../../ui-library/separator/separator\";\nimport { DR_OVERVIEW } from \"../../../../../constants/elements\";\nimport Badge from \"../../../../ui-library/badge/badge\";\nimport { ChainNames } from \"../../../../../constants/chain-id\";\nimport LinkOut from \"../../../../ui-library/link-out/link-out\";\nimport { getAddressUrl } from \"../../../../../utils/etherscan\";\nimport {\n  formatCurrency,\n  formatNumber,\n} from \"../../../../../utils/format-number\";\nimport { CurrencySymbol } from \"../../../../../../types/currency\";\nimport { getContractAddress } from \"../../../../../data/dr/contract-by-network\";\nimport { DrcVaultContext } from \"../../../../../site-context/dr-context/drc-vault-context\";\nimport styles from \"./user-vault-overview.styles\";\n\nconst UserVaultOverview: React.FC = () => {\n  const {\n    chainId,\n    userAccount,\n    drcBalance,\n    drcPrice: { data: drcPrice },\n    userVaultHolding: { data: holding },\n    disconnectWallet,\n  } = React.useContext(DrcVaultContext);\n\n  const { isMobile } = React.useContext(SiteContext);\n  const usdValue =\n    holding !== undefined && drcPrice ? holding * drcPrice : undefined;\n\n  return (\n    <div id={DR_OVERVIEW} css={styles.root}>\n      <div css={styles.back}>\n        <Back url=\"/platform/\" label=\"DR Vaults\" />\n      </div>\n\n      <div css={styles.disconnect} onClick={disconnectWallet}>\n        Disconnect wallet\n      </div>\n\n      <DrCard isNoPadding={true} isNoBorderBottom={isMobile}>\n        <a\n          css={styles.buyDrcButton}\n          href={`https://app.uniswap.org/#/swap?outputCurrency=${getContractAddress(\n            \"drc\",\n            chainId\n          )}&use=V2`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <Badge>Buy DRC</Badge>\n        </a>\n\n        {(chainId === 1 || chainId === 3) && (\n          <div css={styles.badge}>\n            <Badge>{ChainNames[chainId]}</Badge>\n          </div>\n        )}\n\n        <div css={styles.topContainer}>\n          <div css={styles.walletHeading}>Your Connected Wallet</div>\n          <div css={styles.drcBalance}>\n            {formatNumber({ value: drcBalance.data }) || \"loading\"} DRC\n          </div>\n          <LinkOut url={getAddressUrl(userAccount, chainId)} isCenter={true}>\n            {userAccount.slice(0, 10)}...{userAccount.slice(-8)}\n          </LinkOut>\n        </div>\n\n        <Separator />\n\n        <div css={styles.bottomContainer}>\n          <Heading\n            component=\"h2\"\n            textAlign=\"center\"\n            margin={{ bottom: grid(1.5) }}\n          >\n            Your DRC Vault Holdings\n          </Heading>\n\n          <div css={styles.userVaultWorth}>\n            {formatNumber({\n              value: holding,\n            }) || \"-\"}{\" \"}\n            DRC\n          </div>\n\n          <div css={styles.text}>\n            {formatCurrency({\n              value: usdValue,\n              round: 2,\n              currency: CurrencySymbol.USD,\n            }) || \"$-\"}{\" \"}\n            USD\n          </div>\n        </div>\n      </DrCard>\n    </div>\n  );\n};\n\nexport default UserVaultOverview;\n","import * as React from \"react\";\nimport { DrcVaultContext } from \"../../../../site-context/dr-context/drc-vault-context\";\nimport { getAddressUrl } from \"../../../../utils/etherscan\";\nimport Container from \"../../../ui-library/container/container\";\nimport { grid } from \"../../../ui-library/design-tokens/grid\";\nimport LinkOut from \"../../../ui-library/link-out/link-out\";\nimport MarginBox from \"../../../ui-library/margin-box/margin-box\";\nimport Separator from \"../../../ui-library/separator/separator\";\nimport Heading from \"../../../ui-library/text/heading\";\nimport Text from \"../../../ui-library/text/text\";\nimport VaultInfo from \"../vault-info/vault-info\";\nimport ManageYourDr from \"./manage-your-vault/manage-your-vault\";\nimport UserVaultOverview from \"./user-vault-overview/user-vault-overview\";\n\nconst VaultConnected: React.FC = () => {\n  const { chainId, contractAddress } = React.useContext(DrcVaultContext);\n\n  return (\n    <div>\n      <MarginBox margin={{ bottom: grid(4) }}>\n        <UserVaultOverview />\n      </MarginBox>\n\n      <MarginBox\n        margin={{ desktop: { bottom: grid(5) }, mobile: { bottom: grid(4) } }}\n      >\n        <ManageYourDr />\n      </MarginBox>\n\n      <Container>\n        <MarginBox\n          margin={{ desktop: { bottom: grid(8) }, mobile: { bottom: grid(4) } }}\n        >\n          <VaultInfo />\n        </MarginBox>\n\n        <Separator\n          margin={{ desktop: { bottom: grid(8) }, mobile: { bottom: grid(4) } }}\n        />\n\n        <Heading textAlign=\"center\" margin={{ bottom: grid(2) }}>\n          DRC Vault Smart Contract Address\n        </Heading>\n\n        <LinkOut url={getAddressUrl(contractAddress, chainId)} isCenter={true}>\n          <span css={{ wordBreak: \"break-word\" }}>{contractAddress}</span>\n        </LinkOut>\n\n        <Text\n          component=\"div\"\n          textSize={12}\n          textAlign=\"center\"\n          margin={{ top: grid(2) }}\n        >\n          <strong>IMPORTANT</strong>: DO NOT DIRECTLY SEND DRC TO THIS SMART\n          CONTRACT ADDRESS.\n          <br />\n          YOU MUST APPROVE DEPOSITS AND INTERACT WITHIN THE DRC VAULT APP.\n        </Text>\n      </Container>\n    </div>\n  );\n};\n\nexport default VaultConnected;\n","import {\n  CoinMarketDataMapped,\n  CoinMarketDataResult,\n} from \"../../../types/api-results/coin-market-data\";\n\nconst hashData = (input: [number, number][]): Record<string, number> => {\n  return input.reduce((acc: Record<string, number>, cur) => {\n    if (!acc[cur[0]]) {\n      acc[cur[0]] = cur[1];\n    }\n\n    return acc;\n  }, {});\n};\n\nexport const mapCoinMarketData = (\n  data?: CoinMarketDataResult\n): CoinMarketDataMapped | undefined => {\n  if (!data || !data.prices || !data.market_caps || !data.total_volumes) {\n    return undefined;\n  }\n\n  const hashedPrices = hashData(data.prices);\n  const hashedMarketCap = hashData(data.market_caps);\n  const hashedVolume = hashData(data.total_volumes);\n\n  return Object.keys(hashedPrices).map((date) => ({\n    date: parseInt(date),\n    price: hashedPrices[date],\n    marketCap: hashedMarketCap[date],\n    totalVolume: hashedVolume[date],\n  }));\n};\n","import Web3 from \"web3\";\nimport { AbiItem } from \"web3-utils\";\nimport IDRCVault from \"../../../contracts/IDRCVault.json\";\nimport { getBlockTimestamp } from \"../get-block-timestamp\";\n\ninterface TransactionsInput {\n  web3: Web3;\n  contractAddress: string;\n}\n\nexport const getVaultHistoricalHoldings = async ({\n  web3,\n  contractAddress,\n}: TransactionsInput) => {\n  try {\n    const contract = new web3.eth.Contract(\n      IDRCVault.abi as AbiItem[],\n      contractAddress\n    );\n\n    const depositEvents = await contract.getPastEvents(\"Deposit\", {\n      fromBlock: 1,\n    });\n\n    const withdrawEvents = await contract.getPastEvents(\"Withdraw\", {\n      fromBlock: 1,\n    });\n\n    const allTransactions = [...depositEvents, ...withdrawEvents].sort(\n      (a, b) => {\n        return a.blockNumber - b.blockNumber;\n      }\n    );\n\n    const allTxFormated = [];\n    let lastHolding = 0;\n\n    for (const tx of allTransactions) {\n      const blockNumber = tx.blockNumber;\n      const timestamp = await getBlockTimestamp(web3, blockNumber);\n\n      const drcAmount = Number(tx.returnValues.amount);\n\n      lastHolding =\n        tx.event === \"Deposit\"\n          ? lastHolding + drcAmount\n          : lastHolding - drcAmount;\n\n      allTxFormated.push({\n        timestamp,\n        holding: lastHolding,\n      });\n    }\n\n    return allTxFormated;\n  } catch (err) {\n    console.error(\"Failed to get past DRC vault transactions\", err);\n    return null;\n  }\n};\n","import Web3 from \"web3\";\nimport { CoinMarketDataResult } from \"../../../../types/api-results/coin-market-data\";\nimport { COIN_ID } from \"../../../constants/coin-id\";\nimport { getCoinMarketDataQueryUrl } from \"../../coingecko-endpoints\";\nimport { axiosFetch } from \"../../data-fetch/axios-fetch\";\nimport { mapCoinMarketData } from \"../../data-mappings/map-coin-market-data\";\nimport { dataWeb3 } from \"../data-web3\";\nimport { getVaultHistoricalHoldings } from \"./drc-vault-historical-holdings\";\n\ninterface PerformanceTimelineInput {\n  web3?: Web3;\n  contractAddress: string;\n}\n\nexport interface TokenValueTimeStep {\n  date: number;\n  tvl: number;\n  price: number;\n}\n\nexport const getDrcVaultPerformanceTimeline = async ({\n  web3,\n  contractAddress,\n}: PerformanceTimelineInput) => {\n  const web3ToUse = web3 || dataWeb3;\n  const historicalHoldings = await getVaultHistoricalHoldings({\n    web3: web3ToUse,\n    contractAddress,\n  });\n\n  if (!historicalHoldings || historicalHoldings.length === 0) {\n    return null;\n  }\n\n  const startTime = historicalHoldings[0].timestamp;\n\n  const days = (Date.now() / 1000 - startTime) / (60 * 60 * 24);\n  const priceTimeLineData = await axiosFetch<CoinMarketDataResult>(\n    getCoinMarketDataQueryUrl({ id: COIN_ID, days })\n  );\n  const mappedTimeline = mapCoinMarketData(priceTimeLineData.data);\n\n  if (!mappedTimeline) {\n    return null;\n  }\n\n  const reversedHoldings = historicalHoldings.reverse();\n\n  const timelineData: TokenValueTimeStep[] = mappedTimeline.map((step) => {\n    const holding = reversedHoldings.find(\n      (h) => h.timestamp <= step.date / 1000\n    );\n    return {\n      date: step.date,\n      tvl: (holding?.holding || 0) * step.price,\n      price: step.price,\n    };\n  });\n\n  return timelineData;\n};\n","export const COIN_ID = \"digital-reserve-currency\";\n","import * as React from \"react\";\nimport {\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipFormatter,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport formatDate from \"dateformat\";\nimport { useTheme } from \"emotion-theming\";\nimport { Theme } from \"../../../../../types/theme\";\nimport { formatCurrency, formatNumber } from \"../../../../utils/format-number\";\nimport { CurrencySymbol } from \"../../../../../types/currency\";\nimport { TooltipContainerStyles } from \"../../../ui-library/design-tokens/charts\";\nimport { TokenValueTimeStep } from \"../../../../utils/web3/drc-vault/drc-vault-performance-timeline\";\n\nconst timeFormat = (startTime: number, endTime: number) => {\n  const days = (endTime - startTime) / (1000 * 60 * 60 * 24);\n  if (days < 2) {\n    return \"H:MM\";\n  }\n  if (days < 366) {\n    return \"dd mmm\";\n  }\n  if (days < 731) {\n    return \"yyyy mmm\";\n  }\n  return \"yyyy\";\n};\n\ninterface PerformanceLineChartProps {\n  dataKey: \"price\" | \"tvl\";\n  data: TokenValueTimeStep[];\n}\n\nconst PerformanceLineChart: React.FC<PerformanceLineChartProps> = ({\n  dataKey,\n  data,\n}) => {\n  const theme = useTheme<Theme>();\n\n  const startTime = data[0].date;\n  const endTime = data[data.length - 1].date;\n  const maxPrice = Math.max(...data.map((d) => d[dataKey]));\n  const minPrice = Math.min(...data.map((d) => d[dataKey]));\n  const priceDistance = maxPrice - minPrice;\n\n  const timeFormatter = (date: number) =>\n    formatDate(new Date(date), timeFormat(startTime, endTime));\n\n  const priceFormatter = (value: number) =>\n    formatCurrency({ value, currency: CurrencySymbol.USD });\n\n  const toolTipFormatter: TooltipFormatter = (value, name) => {\n    if (name === \"Performance since genesis\" && typeof value === \"number\") {\n      return [`${formatNumber({ value: value * 100, round: 1 })}%`, name];\n    }\n    return [priceFormatter(value as number), name];\n  };\n\n  const keyName = dataKey === \"price\" ? \"PRICE\" : \"TVL\";\n\n  return (\n    <div css={{ fontSize: 12 }}>\n      <ResponsiveContainer width=\"100%\" height={180}>\n        <LineChart data={data}>\n          <XAxis\n            dataKey=\"date\"\n            type=\"number\"\n            scale=\"time\"\n            domain={[\"dataMin\", \"dataMax\"]}\n            tickFormatter={timeFormatter}\n            tickLine={false}\n            tickMargin={5}\n            tick={{ fill: theme.foreground }}\n            axisLine={{ stroke: theme.border }}\n            minTickGap={40}\n          />\n\n          <YAxis\n            yAxisId=\"left\"\n            dataKey={dataKey}\n            orientation=\"left\"\n            domain={[\n              (dataMin) => dataMin - priceDistance / 10,\n              (dataMax) => dataMax + priceDistance / 10,\n            ]}\n            tickFormatter={priceFormatter}\n            hide={true}\n          />\n\n          <Tooltip\n            cursor={false}\n            contentStyle={TooltipContainerStyles(theme)}\n            labelFormatter={(date) =>\n              formatDate(new Date(date), \"yyyy mmm dd H:MM\")\n            }\n            formatter={toolTipFormatter}\n            itemStyle={{ paddingBottom: 0 }}\n          />\n          <Line\n            yAxisId=\"left\"\n            dataKey={dataKey}\n            type=\"monotone\"\n            name={keyName}\n            dot={false}\n            strokeWidth={3}\n            stroke={theme.foreground}\n          />\n\n          <YAxis\n            yAxisId=\"right\"\n            dataKey=\"percentage\"\n            orientation=\"right\"\n            hide={true}\n          />\n          <Line\n            yAxisId=\"right\"\n            dataKey=\"percentage\"\n            type=\"monotone\"\n            name=\"Performance since genesis\"\n            dot={false}\n            activeDot={false}\n            strokeWidth={0}\n            stroke={theme.foreground}\n            hide={dataKey === \"tvl\"}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default PerformanceLineChart;\n","import { Interpolation } from \"@emotion/serialize\";\nimport { grid } from \"../../../ui-library/design-tokens/grid\";\nimport { Device } from \"../../../ui-library/design-tokens/media-queries\";\n\nconst headerContainer: Interpolation = {\n  marginBottom: grid(2),\n\n  [Device.DesktopTablet]: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n};\n\nconst itemPickerContainer: Interpolation = {\n  width: grid(12),\n};\n\nconst infoIcon: Interpolation = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: grid(3),\n};\n\nconst styles = {\n  headerContainer,\n  itemPickerContainer,\n  infoIcon,\n};\n\nexport default styles;\n","import * as React from \"react\";\nimport { WalletContext } from \"../../../../site-context/dr-context/wallet-context\";\nimport { grid } from \"../../../ui-library/design-tokens/grid\";\nimport ItemPickerTabs from \"../../../ui-library/item-picker-tabs/item-picker-tabs\";\nimport Loader from \"../../../ui-library/loader/loader\";\nimport MarginBox from \"../../../ui-library/margin-box/margin-box\";\nimport Heading from \"../../../ui-library/text/heading\";\nimport Text from \"../../../ui-library/text/text\";\nimport {\n  getDrcVaultPerformanceTimeline,\n  TokenValueTimeStep,\n} from \"../../../../utils/web3/drc-vault/drc-vault-performance-timeline\";\nimport PerformanceLineChart from \"./performance-line-chart\";\nimport styles from \"./drc-vault-performance-graph.styles\";\n\ninterface DrcVaultPerformanceGraphProps {\n  contractAddress: string;\n}\n\ntype ChartTab = \"price\" | \"tvl\";\nconst items: { value: ChartTab; label: string }[] = [\n  { label: \"PRICE\", value: \"price\" },\n  { label: \"TVL\", value: \"tvl\" },\n];\n\nconst DrcVaultPerformanceGraph: React.FC<DrcVaultPerformanceGraphProps> = ({\n  contractAddress,\n}) => {\n  const [activeTab, setActiveTab] = React.useState<ChartTab>(\"price\");\n  const [data, setData] = React.useState<TokenValueTimeStep[]>();\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const context = React.useContext(WalletContext);\n  const web3 = !context.loading ? context.web3 : undefined;\n\n  React.useEffect(() => {\n    if (web3) {\n      setLoading(true);\n      getDrcVaultPerformanceTimeline({ web3, contractAddress }).then((res) => {\n        setLoading(false);\n        if (res && res.length) {\n          setData(res);\n        }\n      });\n    }\n  }, [web3]);\n\n  if (loading) {\n    return (\n      <MarginBox\n        margin={{ desktop: { bottom: grid(8) }, mobile: { bottom: grid(7) } }}\n      >\n        <Loader />\n      </MarginBox>\n    );\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <MarginBox\n      margin={{ desktop: { bottom: grid(8) }, mobile: { bottom: grid(7) } }}\n    >\n      <div css={styles.headerContainer}>\n        <div>\n          <Heading margin={{ bottom: grid(1) }}>DRC Vault performance</Heading>\n          <Text\n            component=\"div\"\n            type=\"secondary\"\n            textSize={14}\n            margin={{ mobile: { bottom: grid(2) } }}\n          >\n            {activeTab === \"price\"\n              ? \"Price performance since genesis deposit\"\n              : \"Total Value Locked since genesis deposit\"}\n          </Text>\n        </div>\n\n        <div css={styles.itemPickerContainer}>\n          <ItemPickerTabs\n            itemPickerName=\"drPerformanceChart\"\n            items={items}\n            activeItemValue={activeTab}\n            onItemClick={(value) => setActiveTab(value as ChartTab)}\n            isUniWidth={true}\n            size=\"small\"\n          />\n        </div>\n      </div>\n      <PerformanceLineChart data={data} dataKey={activeTab} />\n    </MarginBox>\n  );\n};\n\nexport default DrcVaultPerformanceGraph;\n","import { Interpolation } from \"@emotion/core\";\nimport { Theme } from \"../../../../../../types/theme\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport { Device } from \"../../../../ui-library/design-tokens/media-queries\";\n\nconst root: Interpolation = {\n  position: \"relative\",\n};\n\nconst back: Interpolation = {\n  position: \"absolute\",\n  top: grid(-0.5),\n  left: 0,\n  zIndex: 1,\n};\n\nconst badge: Interpolation = {\n  position: \"absolute\",\n  top: grid(1.5),\n  right: grid(1.5),\n};\n\nconst text = (theme: Theme): Interpolation => ({\n  color: theme.text,\n});\n\nconst button: Interpolation = {\n  width: \"100%\",\n  [Device.DesktopTablet]: {\n    maxWidth: grid(30),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n};\n\nconst extraInfo = (theme: Theme): Interpolation => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  textAlign: \"center\",\n  color: theme.text,\n  marginTop: grid(3),\n});\n\nconst styles = {\n  root,\n  badge,\n  text,\n  button,\n  back,\n  extraInfo,\n};\n\nexport default styles;\n","import * as React from \"react\";\nimport { WalletContext } from \"../../../../../site-context/dr-context/wallet-context\";\nimport { ChainNames } from \"../../../../../constants/chain-id\";\nimport Back from \"../../../../ui-library/breadcrumb/back\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport DrCard from \"../../../../ui-library/vault-components/dr-card/dr-card\";\nimport MarginBox from \"../../../../ui-library/margin-box/margin-box\";\nimport Heading from \"../../../../ui-library/text/heading\";\nimport Badge from \"../../../../ui-library/badge/badge\";\nimport styles from \"./access-drc-vault.styles\";\n\nconst AccessDrcVaultContainer: React.FC = ({ children }) => {\n  const context = React.useContext(WalletContext);\n\n  if (context.loading) {\n    return null;\n  }\n\n  const { chainId } = context;\n\n  return (\n    <div css={styles.root}>\n      <div css={styles.back}>\n        <Back url=\"/platform/\" label=\"DR Vaults\" />\n      </div>\n\n      <DrCard>\n        <Heading component=\"h2\" textAlign=\"center\" margin={{ bottom: grid(2) }}>\n          Access Your DRC Vault Dashboard\n        </Heading>\n\n        <div css={styles.badge}>\n          {(chainId === 1 || chainId === 3) && (\n            <Badge>{ChainNames[chainId]}</Badge>\n          )}\n        </div>\n\n        <MarginBox margin={{ bottom: grid(3) }}>\n          <div css={styles.text}>Deposit and Withdraw DRC</div>\n        </MarginBox>\n\n        {children}\n      </DrCard>\n    </div>\n  );\n};\n\nexport default AccessDrcVaultContainer;\n","import * as React from \"react\";\nimport { WalletContext } from \"../../../../../site-context/dr-context/wallet-context\";\nimport Button from \"../../../../ui-library/button/button\";\nimport { grid } from \"../../../../ui-library/design-tokens/grid\";\nimport MarginBox from \"../../../../ui-library/margin-box/margin-box\";\nimport LinkOut from \"../../../../ui-library/link-out/link-out\";\nimport { getAddressUrl } from \"../../../../../utils/etherscan\";\nimport AccessDrcVaultContainer from \"./access-drc-vault-container\";\nimport styles from \"./access-drc-vault.styles\";\n\nconst AccessDrcVault: React.FC = () => {\n  const context = React.useContext(WalletContext);\n\n  if (!context.isConnected || context.loading) {\n    return null;\n  }\n\n  const { chainId, userAccount, setViewingVault, isAllowedUser } = context;\n\n  return (\n    <AccessDrcVaultContainer>\n      {isAllowedUser ? (\n        <>\n          <Button\n            css={styles.button}\n            type=\"primary\"\n            onClick={() => setViewingVault(true)}\n          >\n            ACCESS YOUR DRC VAULT\n          </Button>\n\n          <MarginBox margin={{ top: grid(3) }}>\n            <LinkOut url={getAddressUrl(userAccount, chainId)} isCenter={true}>\n              {userAccount.slice(0, 10)}...{userAccount.slice(-8)}\n            </LinkOut>\n          </MarginBox>\n        </>\n      ) : (\n        <>\n          <Button css={styles.button} type=\"primary\">\n            PRIVATE BETA ACCESS ONLY\n          </Button>\n\n          <MarginBox margin={{ top: grid(3) }}>\n            <LinkOut url=\"https://drc.foundation/fund/#nft\" isCenter={true}>\n              Only GEN00 NFT holders currently have access\n            </LinkOut>\n          </MarginBox>\n        </>\n      )}\n    </AccessDrcVaultContainer>\n  );\n};\n\nexport default AccessDrcVault;\n","import { Interpolation } from \"@emotion/core\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport { Device } from \"../../../../../ui-library/design-tokens/media-queries\";\n\nconst container: Interpolation = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexWrap: \"wrap\",\n};\n\nconst item: Interpolation = {\n  flexShrink: 0,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  width: grid(14),\n  marginLeft: grid(1),\n  marginRight: grid(1),\n  marginBottom: grid(4),\n  cursor: \"pointer\",\n\n  \"::nth-last-of-type(2)\": {\n    marginBottom: 0,\n  },\n\n  \":last-of-type\": {\n    marginBottom: 0,\n  },\n\n  \"> img\": {\n    width: grid(8),\n    height: grid(8),\n    marginBottom: grid(1.5),\n  },\n\n  [Device.MobilePortXs]: {\n    width: grid(12),\n  },\n};\n\nconst styles = {\n  container,\n  item,\n};\n\nexport default styles;\n","import * as React from \"react\";\nimport { isIOS, isMobile } from \"react-device-detect\";\nimport MetaMaskLogo from \"../../../../../../images/metamask.svg\";\nimport WalletConnectLogo from \"../../../../../../images/walletconnect-black.svg\";\nimport CoinbaseWalletLogo from \"../../../../../../images/coinbasewallet-black.svg\";\nimport TrustWalletLogo from \"../../../../../../images/trustwallet-black.svg\";\nimport CopyIcon from \"../../../../../../images/copy-black.svg\";\nimport { WalletContext } from \"../../../../../../site-context/dr-context/wallet-context\";\nimport { Colors } from \"../../../../../ui-library/design-tokens/colors\";\nimport { grid } from \"../../../../../ui-library/design-tokens/grid\";\nimport Modal from \"../../../../../ui-library/modal/modal\";\nimport Heading from \"../../../../../ui-library/text/heading\";\nimport Image from \"../../../../../ui-library/image/image\";\nimport Text from \"../../../../../ui-library/text/text\";\nimport { Fonts } from \"../../../../../ui-library/design-tokens/fonts\";\nimport { copyToClipboard } from \"../../../../../../utils/dom/copy-to-clipboard\";\nimport MarginBox from \"../../../../../ui-library/margin-box/margin-box\";\nimport TransactionStatusToast from \"../../../../../ui-library/transaction-status-toast/transaction-status-toast\";\nimport styles from \"./connect-wallets-modal.styles\";\n\nconst URL = \"https://drcglobal.org/platform/drc-vault/\";\nconst METAMASK_WALLET_LINK =\n  \"https://metamask.app.link/dapp/drcglobal.org/platform/drc-vault/\";\nconst TRUST_WALLET_LINK =\n  \"https://link.trustwallet.com/open_url?coin_id=60&url=https://drcglobal.org/platform/drc-vault/\";\nconst COINBASE_WALLET_LINK = \"https://go.cb-w.com/HDzQo0cHWgb\";\n\ninterface WalletInfoModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst WalletInfoModal: React.FC<WalletInfoModalProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const [isCopied, setCopied] = React.useState<boolean>(false);\n\n  const context = React.useContext(WalletContext);\n\n  React.useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    if (isCopied) {\n      timer = setTimeout(() => {\n        setCopied(false);\n      }, 2000);\n    }\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [isCopied]);\n\n  if (context.isConnected || context.loading) {\n    return null;\n  }\n\n  const handleCopy = () => {\n    copyToClipboard(URL);\n    setCopied(true);\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <Heading\n          textAlign=\"center\"\n          css={{ color: Colors.Black }}\n          margin={{ bottom: isMobile ? grid(2) : grid(4) }}\n        >\n          Connect Wallet\n        </Heading>\n\n        {isMobile && (\n          <Text\n            component=\"div\"\n            type=\"secondary\"\n            textAlign=\"center\"\n            margin={{ bottom: grid(4) }}\n          >\n            Please utilise your wallet’s built-in browser\n          </Text>\n        )}\n\n        <div css={styles.container}>\n          <a\n            css={styles.item}\n            href={\n              isMobile\n                ? METAMASK_WALLET_LINK\n                : \"https://metamask.io/download.html\"\n            }\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <Image src={MetaMaskLogo} alt=\"MetaMask\" />\n            <Text weight={Fonts.Weight.Bold}>MetaMask</Text>\n          </a>\n\n          {!isMobile && (\n            <div\n              css={styles.item}\n              onClick={() => context.connectWalletConnect(onClose)}\n            >\n              <Image src={WalletConnectLogo} alt=\"WalletConnect\" />\n              <Text weight={Fonts.Weight.Bold}>WalletConnect</Text>\n            </div>\n          )}\n\n          {isMobile && (\n            <a\n              css={styles.item}\n              href={COINBASE_WALLET_LINK}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <Image src={CoinbaseWalletLogo} alt=\"Coinbase\" />\n              <Text weight={Fonts.Weight.Bold}>Coinbase Wallet</Text>\n            </a>\n          )}\n\n          {isMobile && (\n            <a\n              css={styles.item}\n              href={TRUST_WALLET_LINK}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <Image src={TrustWalletLogo} alt=\"Trust Wallet\" />\n              <Text weight={Fonts.Weight.Bold}>Trust Wallet</Text>\n            </a>\n          )}\n\n          {isMobile && (\n            <div css={styles.item} onClick={handleCopy}>\n              <Image src={CopyIcon} alt=\"Copy\" />\n              <Text weight={Fonts.Weight.Bold}>Copy URL</Text>\n            </div>\n          )}\n        </div>\n\n        {isMobile && isIOS && (\n          <MarginBox margin={{ top: grid(4) }}>\n            <a\n              href=\"https://link.trustwallet.com/browser_enable\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <Text\n                component=\"div\"\n                type=\"secondary\"\n                textSize={14}\n                textAlign=\"center\"\n                css={{ textDecoration: \"underline\" }}\n              >\n                Tap to activate Trust Wallet’s App Browser\n              </Text>\n            </a>\n          </MarginBox>\n        )}\n      </Modal>\n\n      <TransactionStatusToast\n        status={isCopied ? \"success\" : \"none\"}\n        name=\"Copy\"\n        titleOverwrite=\"URL Copied!\"\n        message=\"Open your wallet’s built-in browser and paste\"\n        timeOut={2000}\n      />\n    </>\n  );\n};\n\nexport default WalletInfoModal;\n","import * as React from \"react\";\nimport { ConnectionErrorType } from \"../../../../../../types/wallet\";\nimport { WalletContext } from \"../../../../../site-context/dr-context/wallet-context\";\nimport Button from \"../../../../ui-library/button/button\";\nimport styles from \"./access-drc-vault.styles\";\nimport AccessDrcVaultContainer from \"./access-drc-vault-container\";\nimport WalletInfoModal from \"./connect-wallets-modal/connect-wallets-modal\";\n\nconst buttonTextMapping: Record<ConnectionErrorType, string> = {\n  noInjectedProvider: \"CONNECT WALLET\",\n  multipleWallet: \"MULTIPLE WALLETS DETECTED\",\n  noAccount: \"CONNECT WALLET\",\n  chainNotSupported: \"NETWORK NOT SUPPORTED\",\n};\n\nconst ConnectWallet: React.FC = () => {\n  const context = React.useContext(WalletContext);\n\n  const [isModalOpen, setModalOpen] = React.useState<boolean>(false);\n\n  if (context.isConnected || context.loading) {\n    return null;\n  }\n\n  const { connectionErrorType } = context;\n  const handleClick = () => {\n    if (connectionErrorType === \"noAccount\") {\n      context.connectWallet();\n    }\n    if (connectionErrorType === \"noInjectedProvider\") {\n      // Open modal\n      setModalOpen(true);\n    }\n  };\n\n  return (\n    <AccessDrcVaultContainer>\n      <Button css={styles.button} type=\"primary\" onClick={handleClick}>\n        {buttonTextMapping[connectionErrorType]}\n      </Button>\n\n      {connectionErrorType === \"multipleWallet\" && (\n        <div css={styles.extraInfo}>\n          Multiple wallet instance is detected in your browser\n        </div>\n      )}\n\n      {connectionErrorType === \"chainNotSupported\" && (\n        <div css={styles.extraInfo}>\n          The network set in your wallet is not supported\n        </div>\n      )}\n\n      <WalletInfoModal\n        isOpen={isModalOpen}\n        onClose={() => setModalOpen(false)}\n      />\n    </AccessDrcVaultContainer>\n  );\n};\n\nexport default ConnectWallet;\n","import * as React from \"react\";\nimport { drcVaultAddress } from \"../../../../data/dr/dr-contract-addresses\";\nimport { WalletContext } from \"../../../../site-context/dr-context/wallet-context\";\nimport { getAddressUrl } from \"../../../../utils/etherscan\";\nimport { grid } from \"../../../ui-library/design-tokens/grid\";\nimport LinkOut from \"../../../ui-library/link-out/link-out\";\nimport MarginBox from \"../../../ui-library/margin-box/margin-box\";\nimport Separator from \"../../../ui-library/separator/separator\";\nimport Heading from \"../../../ui-library/text/heading\";\nimport Text from \"../../../ui-library/text/text\";\nimport DrcVaultPerformanceGraph from \"../drc-vault-performance-graph/drc-vault-performance-graph\";\nimport VaultInfo from \"../vault-info/vault-info\";\nimport AccessDrcVault from \"./access-dr/access-drc-vault\";\nimport ConnectWallet from \"./access-dr/connect-wallet\";\n\nconst VaultLanding: React.FC = () => {\n  const context = React.useContext(WalletContext);\n\n  const chainId = !context.loading ? context.chainId : 1;\n  const networkKey = chainId === 3 ? \"ropsten\" : \"mainnet\";\n  const contractAddress = drcVaultAddress[networkKey];\n\n  return (\n    <div>\n      <MarginBox margin={{ bottom: grid(4) }}>\n        {!context.isConnected && <ConnectWallet />}\n        {context.isConnected && <AccessDrcVault />}\n      </MarginBox>\n\n      <MarginBox margin={{ bottom: grid(6) }}>\n        <VaultInfo />\n      </MarginBox>\n\n      <MarginBox\n        margin={{ desktop: { bottom: grid(8) }, mobile: { bottom: grid(6) } }}\n      >\n        <DrcVaultPerformanceGraph contractAddress={contractAddress} />\n      </MarginBox>\n\n      <Heading textAlign=\"center\" margin={{ bottom: grid(3) }}>\n        What is the DRC Vault?\n      </Heading>\n\n      <Text component=\"div\" type=\"secondary\" margin={{ bottom: grid(2) }}>\n        DRC Vault is a secure non-custodial and 100% decentralized application\n        created specifically for DRC holders. DRC tokens held in the DRC Vault\n        remain completely under the user’s control and ownership, with nobody\n        else able to access the funds.\n      </Text>\n      <Text\n        component=\"div\"\n        type=\"secondary\"\n        margin={{ desktop: { bottom: grid(8) }, mobile: { bottom: grid(4) } }}\n      >\n        The DRC Vault features an intuitive interface allowing easy deposits and\n        withdrawals, a leaderboard and performance statistics. Additional\n        benefits may be available to the DRC Vault users in the future.\n      </Text>\n\n      <Separator\n        margin={{ desktop: { bottom: grid(8) }, mobile: { bottom: grid(4) } }}\n      />\n\n      <Heading textAlign=\"center\" margin={{ bottom: grid(2) }}>\n        DRC Vault Smart Contract Address\n      </Heading>\n\n      <LinkOut\n        url={getAddressUrl(\n          contractAddress,\n          (!context.loading ? context.chainId : 1) || 1\n        )}\n        isCenter={true}\n      >\n        <span css={{ wordBreak: \"break-word\" }}>{contractAddress}</span>\n      </LinkOut>\n\n      <Text\n        component=\"div\"\n        textSize={12}\n        textAlign=\"center\"\n        margin={{ top: grid(2) }}\n      >\n        <strong>IMPORTANT</strong>: DO NOT DIRECTLY SEND DRC TO THIS SMART\n        CONTRACT ADDRESS.\n        <br />\n        YOU MUST APPROVE DEPOSITS AND INTERACT WITHIN THE DRC VAULT APP.\n      </Text>\n    </div>\n  );\n};\n\nexport default VaultLanding;\n","import * as React from \"react\";\nimport DrcVaultProvider from \"../../../site-context/dr-context/drc-vault-provider\";\nimport { WalletContext } from \"../../../site-context/dr-context/wallet-context\";\nimport PageHeading from \"../../modules/page-heading/page-heading\";\nimport Container from \"../../ui-library/container/container\";\nimport { grid } from \"../../ui-library/design-tokens/grid\";\nimport Loader from \"../../ui-library/loader/loader\";\nimport MarginBox from \"../../ui-library/margin-box/margin-box\";\nimport VaultConnected from \"./vault-connected/vault-connected\";\nimport VaultLanding from \"./vault-landing/vault-landing\";\n\nconst DrcVault: React.FC = () => {\n  const context = React.useContext(WalletContext);\n\n  const isViewingVault =\n    context.isConnected && context.isViewingVault && context.isAllowedUser;\n\n  const showVaultLanding = !context.loading && !isViewingVault;\n\n  return (\n    <>\n      <Container>\n        <MarginBox\n          margin={{ desktop: { bottom: grid(5) }, mobile: { bottom: grid(4) } }}\n        >\n          <PageHeading\n            heading=\"DRC VAULT\"\n            subHeading=\"DIGITAL RESERVE CURRENCY VAULT\"\n          />\n        </MarginBox>\n      </Container>\n\n      {context.loading && (\n        <Container>\n          <Loader height={160} />\n        </Container>\n      )}\n\n      {showVaultLanding && (\n        <Container>\n          <VaultLanding />\n        </Container>\n      )}\n\n      {context.isConnected && isViewingVault && (\n        <Container fullWidthOnMobile={true}>\n          <DrcVaultProvider {...context}>\n            <VaultConnected />\n          </DrcVaultProvider>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default DrcVault;\n","import * as React from \"react\";\nimport WalletProvider from \"../../../site-context/dr-context/wallet-provider\";\nimport DrcVault from \"./drc-vault\";\n\nconst DrcVaultApp: React.FC = () => {\n  return (\n    <WalletProvider>\n      <DrcVault />\n    </WalletProvider>\n  );\n};\n\nexport default DrcVaultApp;\n","import * as React from \"react\";\nimport { NavTab } from \"../../components/layout/header/header\";\n\nimport Layout from \"../../components/layout/layout\";\nimport DrcVaultApp from \"../../components/pages/drc-vault/drc-vault-app\";\nimport SEO from \"../../components/seo\";\n\nconst DrcVaultPage: React.FC = () => {\n  return (\n    <Layout activeTab={NavTab.Platform} hideSocial={true}>\n      <SEO\n        title=\"DRC Vault\"\n        description=\"DRC Vault is a secure non-custodial and 100% decentralized application created specifically for DRC holders. DRC tokens held in the DRC Vault remain completely under the user’s control and ownership, with nobody else able to access the funds.\"\n      />\n\n      <DrcVaultApp />\n    </Layout>\n  );\n};\n\nexport default DrcVaultPage;\n"],"sourceRoot":""}